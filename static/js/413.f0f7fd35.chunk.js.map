{"version":3,"file":"static/js/413.f0f7fd35.chunk.js","mappings":"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","sources":["assets/images/Chat-Btn.svg","pages/home/Home.styles.ts","components/Table/Table.styles.ts","recoil/atoms/common.ts","utils/convertMillonWon.ts","recoil/atoms/table.ts","recoil/atoms/upbit.ts","api/upbit/useFetchUpbitMarketCode.ts","recoil/atoms/exchange.ts","utils/priceCalc.ts","hooks/binance/useBinanceTicker.ts","hooks/upbit/useUpbitTicker.ts","hooks/binance/updateUpbitListWithBinance.ts","components/Table/UpbitTable.tsx","api/bithumb/fetchBithumbTicker.ts","recoil/atoms/bithumb.ts","hooks/bithumb/useBithumbWsTicker.ts","hooks/bithumb/useFetchBithumbticker.ts","hooks/binance/updateBithumbSocketDataWithBinance.ts","utils/judgeColor.ts","recoil/atoms/coingecko.ts","hooks/bithumb/useMatchCoingecko.ts","components/Table/BithumbTable.tsx","api/coingecko/getCoingeckoData.ts","components/Table/Bithumb.tsx","components/Table/TableHeader/TableHeader.styles.ts","components/Table/TableHeader/TableHeaderItem.styles.tsx","components/Table/TableHeader/TableHeaderItem.tsx","components/Table/TableHeader/TableHeader.tsx","hooks/binance/useFetchExchangeRate.ts","components/CustomSelect/CustomSelect.styles.ts","components/CustomSelect/CustomSelect.tsx","hooks/useDropdown.ts","components/Table/Table.constant.ts","components/Table/Table.tsx","utils/getTodayDate.ts","api/upbit/useCreateChart.ts","components/ChartRight/ChartRight.styles.ts","components/ChartRight/ChartRight.tsx","components/ChartLeft/TradingViewWidget.tsx","components/ChartLeft/ChartLeft.constant.ts","recoil/atoms/selectState.ts","components/ChartLeft/ChartLeft.styles.ts","components/ChartLeft/ChartInfo.tsx","components/ChartLeft/ChartLeft.tsx","firebase/config.ts","firebase/fetchMessages.ts","firebase/messageQuery.ts","firebase/orderSnapshotMessages.ts","components/Message/Message.styles.ts","components/Message/Message.tsx","firebase/createMessages.ts","api/getNickname.ts","components/SendMessage/SendMessage.styles.ts","components/SendMessage/SendMessage.tsx","components/ChatBox/ChatBox.styles.ts","components/ChatBox/ChatBox.tsx","api/getTickerWidgetData.ts","hooks/useWidgetTickers.ts","components/Widget/Widget.constants.ts","api/getChartWidgetData.ts","hooks/useChartTickers.ts","components/Widget/ChartWidget.tsx","utils/getFormattedValues.ts","utils/formatNumber.ts","components/Widget/Widget.styles.ts","components/Widget/TickerWidget.tsx","components/Widget/Carousel.tsx","components/Widget/Widget.tsx","components/common/Header/Header.styles.ts","api/getGlobalCoinData.ts","recoil/atoms/globalCoin.ts","hooks/useTheme.ts","assets/images/Logo-Dark.svg","assets/images/Logo-Light.svg","components/common/Header/Header.tsx","components/bithumb/ChartComponent.tsx","api/bithumb/fetchBithumbCandlestick.ts","components/bithumb/RealTimeChart.tsx","pages/home/index.ts","pages/home/Home.page.tsx"],"sourcesContent":["var _g, _g2, _path, _g3, _g4, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChatBtn(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 160 140\",\n    fill: \"none\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.4,\n    filter: \"url(#filter0_f_8_17)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.5259 84.067C70.5259 70.0642 81.8615 58.7127 95.8445 58.7127H119.132C133.115 58.7127 144.451 70.0642 144.451 84.067V97.178C144.451 103.94 138.977 109.421 132.225 109.421V109.421C130.53 109.421 130.295 117 128.671 117C126.981 117 123.903 109.421 122.273 109.421C113.138 109.421 104.813 109.421 95.8458 109.421C81.8627 109.421 70.5259 98.0698 70.5259 84.067V84.067Z\",\n    fill: \"url(#paint0_linear_8_17)\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.4,\n    filter: \"url(#filter1_f_8_17)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M119.132 61.0329H95.8445C83.1411 61.0329 72.8428 71.3456 72.8428 84.067C72.8428 96.7882 83.1421 107.101 95.8458 107.101H122.273C123.324 107.101 124.087 107.673 124.448 107.979C124.873 108.342 125.249 108.786 125.561 109.193C126.164 109.981 126.794 110.988 127.35 111.878L127.413 111.98C127.647 112.352 127.868 112.705 128.078 113.031C128.109 112.907 128.141 112.779 128.174 112.647L128.186 112.599C128.409 111.708 128.682 110.613 129.034 109.739C129.211 109.299 129.472 108.744 129.869 108.265C130.271 107.78 131.051 107.101 132.225 107.101C137.697 107.101 142.134 102.658 142.134 97.178V84.067C142.134 71.3456 131.836 61.0329 119.132 61.0329ZM129.458 114.89C129.459 114.89 129.458 114.889 129.458 114.89C129.494 114.92 129.495 114.914 129.458 114.89ZM95.8445 58.7127C81.8615 58.7127 70.5259 70.0642 70.5259 84.067C70.5259 98.0698 81.8627 109.421 95.8458 109.421H122.273C123.081 109.421 124.244 111.282 125.418 113.159C126.612 115.071 127.818 117 128.671 117C129.474 117 129.938 115.145 130.406 113.271C130.885 111.356 131.368 109.421 132.225 109.421C138.977 109.421 144.451 103.94 144.451 97.178V84.067C144.451 70.0642 133.115 58.7127 119.132 58.7127H95.8445Z\",\n    fill: \"#979797\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.5519 73.2502C67.5519 57.7023 80.1383 45.0982 95.6643 45.0982H118.888C134.414 45.0982 147 57.7023 147 73.2502V88.2442C147 95.5111 141.117 101.402 133.861 101.402V101.402C132.039 101.402 131.787 109.817 130.041 109.817C128.225 109.817 124.917 101.402 123.166 101.402C113.655 101.402 104.961 101.402 95.6656 101.402C80.1396 101.402 67.5519 88.7981 67.5519 73.2502V73.2502Z\",\n    fill: \"url(#paint1_linear_8_17)\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter2_f_8_17)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.5519 63.8182C67.5519 53.4794 75.9214 45.0982 86.2456 45.0982H97.2919C107.616 45.0982 115.986 53.4794 115.986 63.8182V63.8182C115.986 74.1569 107.616 82.5382 97.2919 82.5382H86.2456C75.9214 82.5382 67.5519 74.1569 67.5519 63.8182V63.8182Z\",\n    fill: \"#4659FF\",\n    fillOpacity: 0.45\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter3_bi_8_17)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M71.3758 0C92.9628 0 110.463 17.5244 110.463 39.1418C110.463 60.7592 92.961 78.2836 71.374 78.2836H33.1388C31.9319 78.2836 30.194 81.1561 28.4405 84.0545C26.6551 87.0057 24.8534 89.9836 23.5795 89.9836C22.3785 89.9836 21.6859 87.1202 20.986 84.2265C20.2711 81.2709 19.5485 78.2836 18.2688 78.2836C8.17922 78.2836 0 70.0929 0 59.9891V39.1418C0 17.5244 17.4997 0 39.0867 0H71.3758ZM39.7237 45.0982C42.4221 45.0982 44.6095 42.9076 44.6095 40.2055C44.6095 37.5033 42.4221 35.3127 39.7237 35.3127C37.0253 35.3127 34.8378 37.5033 34.8378 40.2055C34.8378 42.9076 37.0253 45.0982 39.7237 45.0982ZM60.3295 40.2055C60.3295 42.9076 58.142 45.0982 55.4436 45.0982C52.7453 45.0982 50.5578 42.9076 50.5578 40.2055C50.5578 37.5033 52.7453 35.3127 55.4436 35.3127C58.142 35.3127 60.3295 37.5033 60.3295 40.2055ZM71.1632 45.0982C73.8616 45.0982 76.0491 42.9076 76.0491 40.2055C76.0491 37.5033 73.8616 35.3127 71.1632 35.3127C68.4648 35.3127 66.2774 37.5033 66.2774 40.2055C66.2774 42.9076 68.4648 45.0982 71.1632 45.0982Z\",\n    fill: \"url(#paint2_linear_8_17)\",\n    fillOpacity: 0.3\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_f_8_17\",\n    x: 30.5259,\n    y: 18.7127,\n    width: 153.925,\n    height: 138.287,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 20,\n    result: \"effect1_foregroundBlur_8_17\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter1_f_8_17\",\n    x: 30.5259,\n    y: 18.7127,\n    width: 153.925,\n    height: 138.287,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 20,\n    result: \"effect1_foregroundBlur_8_17\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter2_f_8_17\",\n    x: 37.5519,\n    y: 15.0982,\n    width: 108.434,\n    height: 97.44,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 15,\n    result: \"effect1_foregroundBlur_8_17\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter3_bi_8_17\",\n    x: -25,\n    y: -25,\n    width: 160.463,\n    height: 139.984,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    in: \"BackgroundImageFix\",\n    stdDeviation: 12.5\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"SourceAlpha\",\n    operator: \"in\",\n    result: \"effect1_backgroundBlur_8_17\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_backgroundBlur_8_17\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 20\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"arithmetic\",\n    k2: -1,\n    k3: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.35 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"shape\",\n    result: \"effect2_innerShadow_8_17\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_8_17\",\n    x1: 70.5259,\n    y1: 53.9231,\n    x2: 114.038,\n    y2: 155.51,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#6B7AFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#5EB2FF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_8_17\",\n    x1: 80.7225,\n    y1: 39.3545,\n    x2: 133.715,\n    y2: 113.1,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.283719,\n    stopColor: \"#6B7AFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#5EB2FF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_8_17\",\n    x1: 2.33671,\n    y1: -7.66434e-7,\n    x2: 86.1425,\n    y2: 77.7405,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8490FF\",\n    stopOpacity: 0.45\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.515821,\n    stopColor: \"#6B7AFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.779545,\n    stopColor: \"#363EFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.988497,\n    stopColor: \"#6B7AFF\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChatBtn);\nexport default __webpack_public_path__ + \"static/media/Chat-Btn.ecdf49b63e77f1a93ad232df8ddb7597.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { ReactComponent as ChatBtn } from 'assets/images/Chat-Btn.svg';\r\n\r\nexport const DisplayBoard = styled.main`\r\n  width: 1050px;\r\n  margin: 0 auto;\r\n  display: grid;\r\n\r\n  *::-webkit-scrollbar,\r\n  *::-webkit-scrollbar-thumb {\r\n    width: 0px;\r\n  }\r\n\r\n  *::-webkit-scrollbar-thumb {\r\n  }\r\n  *:hover::-webkit-scrollbar,\r\n  *:hover::-webkit-scrollbar-thumb {\r\n    width: 26px;\r\n    border-radius: 13px;\r\n    background-clip: padding-box;\r\n    border: 12px solid transparent;\r\n    color: grey;\r\n  }\r\n\r\n  *:hover::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 0 10px;\r\n  }\r\n`;\r\n\r\nexport const ChartsWrapper = styled.div`\r\n  padding: 5px;\r\n  display: grid;\r\n  gap: 1rem;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 300px;\r\n`;\r\n\r\ninterface ChatButtonProps {\r\n  $isOpen: boolean;\r\n}\r\n\r\nexport const ChatButton = styled.button<ChatButtonProps>`\r\n  background: ${({ theme }) => theme.colors.bg_element2};\r\n  border: 1px solid ${({ theme }) => theme.colors.border1};\r\n  width: 130px;\r\n  height: 80px;\r\n  border-top-left-radius: 45px;\r\n  border-bottom-left-radius: 45px;\r\n  position: fixed;\r\n  top: 50%;\r\n  right: 0;\r\n  padding: 0 1.4rem;\r\n  box-shadow: ${({ theme }) => theme.colors.alpha1} 0px 5px 20px 0px;\r\n  transform: ${({ $isOpen }) =>\r\n    $isOpen ? 'translate(130px, 0)' : 'translate(30px, 0)'};\r\n  transition:\r\n    background 180ms cubic-bezier(0.25, 0.75, 0.5, 1.25) 0ms,\r\n    transform 0.4s cubic-bezier(0.25, 0.75, 0.5, 1.25);\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.bg_element1};\r\n    transform: translate(5px, 0);\r\n  }\r\n`;\r\n\r\nexport const Icon = styled(ChatBtn)`\r\n  width: 60px;\r\n  height: 90px;\r\n  transform: translate(-10px, 0px);\r\n`;\r\n","import styled from 'styled-components';\r\n\r\ninterface CoinBoxProps {\r\n  $selected: boolean;\r\n}\r\n\r\ninterface CoinBoxChangeProps {\r\n  $changeType: string;\r\n}\r\n\r\ninterface CoinBoxKimchiPremiumProps {\r\n  $isPositive: string;\r\n}\r\n\r\nexport const TableContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const TableNav = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const TableBox = styled.div`\r\n  padding: 0 0.9375rem 1.375rem 0.9375rem;\r\n  background-color: ${({ theme }) => theme.colors.bg_element4};\r\n  border-radius: 15px;\r\n  box-shadow: 0px 0px 25px 0px rgba(48, 73, 191, 0.07);\r\n`;\r\n\r\nexport const SelectWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const CoinListWrapper = styled.div`\r\n  overflow: overlay;\r\n  height: 24.75rem;\r\n`;\r\n\r\nexport const CoinBox = styled.div<CoinBoxProps>`\r\n  height: 45px;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 1.5fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  border-bottom: 0.5px solid lightgrey;\r\n  font-size: 0.9rem;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  cursor: pointer;\r\n  background-color: ${(props) => (props.$selected ? 'lightgrey' : 'inherit')};\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n  div {\r\n    display: flex;\r\n  }\r\n  div:nth-child(1) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  div:nth-child(2) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n  div:nth-child(3) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n  }\r\n  div:nth-child(4) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n  }\r\n  div:nth-child(5) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n  }\r\n  div:nth-child(6) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n  }\r\n  div:nth-child(7) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n  }\r\n  div:nth-child(8) {\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const CoinBoxName = styled.div`\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport const CoinBoxNameKorean = styled.div`\r\n  display: flex;\r\n  flex-direction: row !important;\r\n  align-items: center !important;\r\n  > img {\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nexport const CoinBoxNameMarket = styled.div`\r\n  color: gray;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nexport const CoinBoxPrice = styled.div`\r\n  font-weight: 600;\r\n  div:nth-child(2) {\r\n    font-weight: normal;\r\n    font-size: 0.8rem;\r\n    color: #4c769d;\r\n  }\r\n`;\r\nexport const CoinBoxPriceKorean = styled.div``;\r\nexport const CoinBoxPriceBinance = styled.div``;\r\nexport const CoinBoxKimchiPremium = styled.div<CoinBoxKimchiPremiumProps>`\r\n  font-weight: bold;\r\n  div:nth-child(2) {\r\n    font-weight: normal;\r\n    font-size: 0.8rem;\r\n    color: #4c769d;\r\n  }\r\n  color: gray;\r\n  color: ${(props) => {\r\n    switch (props.$isPositive) {\r\n      case 'true':\r\n        return '#EF1C1C';\r\n      case 'false':\r\n        return '#1261C4';\r\n      case 'none':\r\n        return '#000000';\r\n    }\r\n  }};\r\n`;\r\nexport const CoinBoxKimchiPremiumRate = styled.div``;\r\nexport const CoinBoxKimchiPremiumDiff = styled.div``;\r\nexport const CoinBoxChange = styled.div<CoinBoxChangeProps>`\r\n  font-weight: bold;\r\n\r\n  div:nth-child(2) {\r\n    font-weight: normal;\r\n    font-size: 0.8rem;\r\n    color: #4c769d;\r\n  }\r\n  color: ${(props) => {\r\n    switch (props.$changeType) {\r\n      case 'RISE':\r\n        return '#EF1C1C';\r\n      case 'EVEN':\r\n        return '#000000';\r\n      case 'FALL':\r\n        return '#1261C4';\r\n      default:\r\n        return '#000000';\r\n    }\r\n  }};\r\n`;\r\nexport const CoinBoxChangeRate = styled.div``;\r\nexport const CoinBoxChangePrice = styled.div``;\r\n\r\nexport const CoinBoxHighestWeek = styled.div`\r\n  font-weight: bold;\r\n\r\n  div:nth-child(2) {\r\n    font-weight: normal;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\nexport const CoinBoxHighestWeekRate = styled.div`\r\n  color: #1261c4;\r\n`;\r\nexport const CoinBoxHighestWeekPrice = styled.div``;\r\n\r\nexport const CoinBoxLowestWeek = styled.div`\r\n  font-weight: bold;\r\n\r\n  div:nth-child(2) {\r\n    font-weight: normal;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\nexport const CoinBoxLowestWeekRate = styled.div`\r\n  color: #ef1c1c;\r\n`;\r\nexport const CoinBoxLowestWeekPrice = styled.div``;\r\n\r\nexport const CoinBoxVolume = styled.div`\r\n  font-size: 0.9rem;\r\n  div:nth-child(2) {\r\n    color: grey;\r\n  }\r\n`;\r\n","import { IUpbitMarketCode } from 'hooks/upbit/useUpbitTicker';\r\nimport { atom } from 'recoil';\r\n\r\nexport type SelectedCoinInfoType = {\r\n  candle_date_time_kt: string;\r\n  opening_price: number;\r\n  high_price: number;\r\n  low_price: number;\r\n  trade_price: number;\r\n  trade_date: string;\r\n};\r\n\r\nexport const baseExchangeState = atom<string>({\r\n  key: 'baseExchangeState',\r\n  default: 'upbit',\r\n});\r\n\r\nexport const selectedCoinState = atom<IUpbitMarketCode[]>({\r\n  key: 'selectedCoinState',\r\n  default: [\r\n    {\r\n      market: 'KRW-BTC',\r\n      korean_name: '비트코인',\r\n      english_name: 'Bitcoin',\r\n    },\r\n  ],\r\n});\r\n\r\nexport const selectedCoinInfoState = atom<SelectedCoinInfoType | any>({\r\n  key: 'selectedCoinInfoState',\r\n  default: {},\r\n});\r\n\r\nexport const searchCoinState = atom({\r\n  key: 'searchCoinState',\r\n  default: '',\r\n});\r\n","export const convertMillonWon = (value: number) => {\r\n  const MILLION = 1000000;\r\n  const extractedValue = value / MILLION;\r\n  return extractedValue;\r\n};\r\n","import { atom } from 'recoil';\r\n\r\nexport const tableSortValueState = atom<string>({\r\n  key: 'tableSortState',\r\n  default: '거래액(일)',\r\n});\r\n\r\nexport const tableSortUpDownState = atom<boolean>({\r\n  key: 'tableUpDownState',\r\n  default: false,\r\n});\r\n","import { IUpbitMarketCode } from 'hooks/upbit/useUpbitTicker';\r\nimport { atom } from 'recoil';\r\n\r\nexport const upbitMarketCodesState = atom<IUpbitMarketCode[]>({\r\n  key: 'upbitMarketCodesState',\r\n  default: [],\r\n});\r\n\r\nexport const modalIsOpenState = atom({\r\n  key: 'modalIsOpenState',\r\n  default: true,\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { IUpbitMarketCode } from '../../hooks/upbit/useUpbitTicker';\r\n\r\nfunction useFetchUpbitMarketCode(): {\r\n  isLoading: boolean;\r\n  marketCodes: IUpbitMarketCode[];\r\n} {\r\n  const REST_API_URL = 'https://api.upbit.com/v1/market/all?isDetails=false';\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [marketCodes, setMarketCodes] = useState<IUpbitMarketCode[]>([]);\r\n\r\n  const fetchMarketCodes = async () => {\r\n    try {\r\n      const cachedData = sessionStorage.getItem('upbitMarketCodes');\r\n      if (cachedData) {\r\n        setMarketCodes(JSON.parse(cachedData));\r\n        setIsLoading(false); // 데이터가 있으면 로딩 상태를 false로 설정\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(REST_API_URL);\r\n      if (!response.ok) {\r\n        throw new Error('API를 불러올 수 없습니다!');\r\n      }\r\n      const json = await response.text(); // 텍스트 형식으로 추출\r\n\r\n      const result = JSON.parse(json).filter((code: IUpbitMarketCode) =>\r\n        code.market.includes('KRW'),\r\n      ); // 텍스트 데이터를 객체로 변환 후 원화만 필터링\r\n\r\n      sessionStorage.setItem('upbitMarketCodes', JSON.stringify(result));\r\n\r\n      setMarketCodes(result);\r\n    } catch (error) {\r\n      console.error('API를 불러오는 중 에러 발생!', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMarketCodes();\r\n  }, []);\r\n\r\n  return { isLoading, marketCodes };\r\n}\r\n\r\nexport default useFetchUpbitMarketCode;\r\n","import { atom } from 'recoil';\r\n\r\nexport const exchangeRateState = atom({\r\n  key: 'exchangeRateState',\r\n  default: 0,\r\n});\r\n","import { IUpbitTicker } from 'hooks/upbit/useUpbitTicker';\r\nimport { IBithumbTicker } from 'components/bithumb/Bithumb.type';\r\n\r\n// 공통\r\n// 김프\r\nexport const binancePriceToKRW = (\r\n  binancePrice: string,\r\n  myExchangeRate: number,\r\n) => parseFloat(binancePrice) * myExchangeRate;\r\n\r\n// 김프 비율\r\nexport const kimchiPremiumRatio = (\r\n  nowPrice: number,\r\n  binancePrice: string,\r\n  myExchangeRate: number,\r\n) => (nowPrice / (parseFloat(binancePrice) * myExchangeRate) - 1) * 100;\r\n\r\n// 김프와 국내 거래소 가격 차이\r\nexport const kimchiPremiumDiff = (\r\n  nowPrice: number,\r\n  binancePrice: string,\r\n  myExchangeRate: number,\r\n) => nowPrice - parseFloat(binancePrice) * myExchangeRate;\r\n\r\n// 업비트\r\n// 고가 대비 증감률(52주)\r\nexport const highest_52_week_rate = (data: IUpbitTicker) =>\r\n  (data.trade_price / data.highest_52_week_price - 1) * 100;\r\n\r\n// 저가 대비 증감률(52주)\r\nexport const lowest_52_week_rate = (data: IUpbitTicker) =>\r\n  (data.trade_price / data.lowest_52_week_price - 1) * 100;\r\n\r\n// 빗썸\r\n// 전일 대비 증감률\r\nexport const changesRatio = ({\r\n  closing_price,\r\n  prev_closing_price,\r\n}: IBithumbTicker) =>\r\n  ((Number(closing_price) - Number(prev_closing_price)) /\r\n    Number(prev_closing_price)) *\r\n  100;\r\n\r\n// 전일 대비\r\nexport const changes = ({\r\n  closing_price,\r\n  prev_closing_price,\r\n}: IBithumbTicker) => Number(closing_price) - Number(prev_closing_price);\r\n\r\n// 고가 대비 증감률(전일)\r\nexport const highRatio = ({ closing_price, max_price }: IBithumbTicker) =>\r\n  ((Number(closing_price) - Number(max_price)) / Number(max_price)) * 100;\r\n\r\n// 저가 대비 증감률(전일)\r\nexport const lowRatio = ({ closing_price, min_price }: IBithumbTicker) =>\r\n  ((Number(closing_price) - Number(min_price)) / Number(min_price)) * 100;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport interface IBinanceTicker {\r\n  e: string; // Event type\r\n  E: number; // Event time\r\n  s: string; // Symbol\r\n  c: string; //  Last price\r\n  Q: string; //  Last quantity\r\n}\r\n\r\nconst useBinanceTicker = () => {\r\n  const [binanceTickers, setBinanceTickers] = useState<IBinanceTicker[] | null>(\r\n    null,\r\n  );\r\n  const SOCKET_URL = `wss://stream.binance.com:9443/ws/!ticker@arr`;\r\n  // const limit = 30;\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(SOCKET_URL);\r\n\r\n    ws.onmessage = (e) => {\r\n      try {\r\n        const data: IBinanceTicker[] = JSON.parse(e.data);\r\n        const filteredData = data.filter((ticker: IBinanceTicker) =>\r\n          ticker.s.endsWith('USDT'),\r\n        );\r\n        // setBinanceTickers(filteredData.slice(0, limit));\r\n        setBinanceTickers(filteredData);\r\n      } catch (e) {\r\n        console.log('파싱 에러:', e);\r\n      }\r\n    };\r\n\r\n    ws.onerror = (err) => {\r\n      console.log('WebSocket Error', err);\r\n    };\r\n\r\n    return () => {\r\n      if (ws.readyState === WebSocket.OPEN) {\r\n        ws.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return { binanceTickers };\r\n};\r\n\r\nexport default useBinanceTicker;\r\n","import { useRef, useState, useEffect, useCallback, useMemo } from 'react';\r\nimport useBinanceTicker from 'hooks/binance/useBinanceTicker';\r\nimport { updateUpbitListWithBinance } from 'hooks/binance/updateUpbitListWithBinance';\r\nimport { throttle } from 'lodash';\r\n\r\nexport interface IUpbitTicker {\r\n  code: string;\r\n  change: string;\r\n  trade_price: number;\r\n  signed_change_rate: number;\r\n  signed_change_price: number;\r\n  highest_52_week_price: number;\r\n  lowest_52_week_price: number;\r\n  acc_trade_price_24h: number;\r\n  acc_trade_volume_24h: number;\r\n  binancePrice?: string;\r\n}\r\n\r\nexport interface IUpbitMarketCode {\r\n  market: string;\r\n  korean_name: string;\r\n  english_name: string;\r\n}\r\n\r\nconst createWebSocketRequest = (\r\n  ticket: string,\r\n  type: string,\r\n  codes: string[],\r\n  format = 'DEFAULT',\r\n) => {\r\n  const request = [{ ticket }, { type, codes }, { format }];\r\n  return JSON.stringify(request);\r\n};\r\n\r\nfunction useUpbitTicker(marketCodes: IUpbitMarketCode[]) {\r\n  const SOCKET_URL = 'wss://api.upbit.com/websocket/v1';\r\n  const socket = useRef<WebSocket | null>(null);\r\n  const [list, setList] = useState<IUpbitTicker[]>([]);\r\n  const { binanceTickers } = useBinanceTicker();\r\n\r\n  const wsRequest = useMemo(() => {\r\n    const ticket = 'seungjun2';\r\n    const type = 'ticker';\r\n    const codes = marketCodes.map((code) => code.market);\r\n    return createWebSocketRequest(ticket, type, codes);\r\n  }, [marketCodes]);\r\n\r\n  const handleSocketMessage = (evt: any) => {\r\n    if (evt.data instanceof Blob) {\r\n      const reader = new FileReader();\r\n      reader.onload = function () {\r\n        const blobData = reader.result;\r\n        try {\r\n          const parsedData = JSON.parse(blobData as string);\r\n          setList((prevList) => {\r\n            const existingIndex = prevList.findIndex(\r\n              (item) => item.code === parsedData?.code,\r\n            );\r\n            if (existingIndex !== -1) {\r\n              return prevList.map((item, index) =>\r\n                index === existingIndex ? { ...item, ...parsedData } : item,\r\n              );\r\n            } else {\r\n              return [...prevList, parsedData];\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error('JSON 데이터 파싱 오류:', error);\r\n        }\r\n      };\r\n      reader.readAsText(evt.data);\r\n    }\r\n  };\r\n\r\n  const socketMessageHandler = useCallback(\r\n    throttle(handleSocketMessage, 100, { leading: true }),\r\n    [],\r\n  );\r\n\r\n  const socketOpenHandler = () => {\r\n    if (socket.current?.readyState == 1) {\r\n      socket.current.send(wsRequest);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.current = new WebSocket(SOCKET_URL);\r\n    socket.current.onopen = socketOpenHandler;\r\n    socket.current.onmessage = socketMessageHandler;\r\n\r\n    return () => {\r\n      if (socket.current) {\r\n        socket.current.close();\r\n      }\r\n    };\r\n  }, [marketCodes, wsRequest]);\r\n\r\n  useEffect(() => {\r\n    if (binanceTickers) {\r\n      const newList = updateUpbitListWithBinance(list, binanceTickers);\r\n      setList(newList);\r\n    }\r\n  }, [binanceTickers]);\r\n\r\n  return { socketDatas: list };\r\n}\r\n\r\nexport default useUpbitTicker;\r\n","import { IUpbitTicker } from 'hooks/upbit/useUpbitTicker';\r\nimport { IBinanceTicker } from './useBinanceTicker';\r\nexport function updateUpbitListWithBinance(\r\n  list: IUpbitTicker[],\r\n  binanceTickers: IBinanceTicker[],\r\n): IUpbitTicker[] {\r\n  const removeUSDT = (symbol: string) => {\r\n    return symbol.replace('USDT', '');\r\n  };\r\n\r\n  const updatedList = list.map((item) => {\r\n    const binanceTicker = binanceTickers?.find(\r\n      (ticker) => removeUSDT(ticker.s) === item.code?.split('-')[1],\r\n    );\r\n    if (binanceTicker) {\r\n      return {\r\n        ...item,\r\n        binancePrice: binanceTicker.c,\r\n      };\r\n    }\r\n    return item;\r\n  });\r\n\r\n  return updatedList;\r\n}\r\n","import { useEffect, useState, memo } from 'react';\r\nimport * as styled from './Table.styles';\r\nimport { convertMillonWon } from 'utils/convertMillonWon';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport {\r\n  selectedCoinInfoState,\r\n  selectedCoinState,\r\n  searchCoinState,\r\n} from 'recoil/atoms/common';\r\nimport { tableSortUpDownState, tableSortValueState } from 'recoil/atoms/table';\r\nimport { upbitMarketCodesState } from 'recoil/atoms/upbit';\r\nimport useFetchUpbitMarketCode from 'api/upbit/useFetchUpbitMarketCode';\r\nimport { exchangeRateState } from 'recoil/atoms/exchange';\r\nimport {\r\n  binancePriceToKRW,\r\n  kimchiPremiumRatio,\r\n  kimchiPremiumDiff,\r\n  highest_52_week_rate,\r\n  lowest_52_week_rate,\r\n} from 'utils/priceCalc';\r\nimport useUpbitTicker, { IUpbitMarketCode } from 'hooks/upbit/useUpbitTicker';\r\n\r\nfunction UpbitTable() {\r\n  const { marketCodes } = useFetchUpbitMarketCode();\r\n  const [upbitMarketCodes, setUpbitMarketCodes] = useRecoilState(\r\n    upbitMarketCodesState,\r\n  );\r\n  setUpbitMarketCodes(marketCodes);\r\n  const { socketDatas } = useUpbitTicker(upbitMarketCodes);\r\n\r\n  const [selectedCoin, setSelectedCoin] = useRecoilState(selectedCoinState);\r\n\r\n  const [selectedCoinInfo, setSelectedCoinInfo] = useRecoilState(\r\n    selectedCoinInfoState,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (socketDatas) {\r\n      const targetData = socketDatas.filter(\r\n        (data) => data.code == selectedCoin[0].market,\r\n      );\r\n      setSelectedCoinInfo(targetData);\r\n    }\r\n  }, [selectedCoin, socketDatas]);\r\n\r\n  const clickCoinHandler = (evt: React.MouseEvent<HTMLDivElement>) => {\r\n    const currentTarget = marketCodes.filter(\r\n      (code: IUpbitMarketCode) => code.market === evt.currentTarget.id,\r\n    );\r\n    setSelectedCoin(currentTarget);\r\n  };\r\n\r\n  const myExchangeRate = useRecoilValue(exchangeRateState);\r\n  const searchCoin = useRecoilValue(searchCoinState);\r\n  const [filteredSocketDatas, setFilteredSocketDatas] = useState(socketDatas);\r\n\r\n  useEffect(() => {\r\n    const filteredSocketDatas = socketDatas.filter((data) =>\r\n      marketCodes.some(\r\n        (marketCode) =>\r\n          marketCode.market === data.code &&\r\n          marketCode.korean_name.includes(searchCoin),\r\n      ),\r\n    );\r\n    setFilteredSocketDatas(filteredSocketDatas);\r\n  }, [searchCoin, socketDatas]);\r\n\r\n  // TODO|서지수 - 모듈화 예정\r\n  const tableSortValue = useRecoilValue(tableSortValueState);\r\n  const tableSortUpDown = useRecoilValue(tableSortUpDownState);\r\n  useEffect(() => {\r\n    switch (tableSortValue) {\r\n      case '코인':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.code > b.code) {\r\n              return 1;\r\n            } else {\r\n              return -1;\r\n            }\r\n          });\r\n        } else {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.code > b.code) {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          });\r\n        }\r\n        break;\r\n\r\n      case '현재가':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => a.trade_price - b.trade_price);\r\n        } else {\r\n          socketDatas.sort((a, b) => b.trade_price - a.trade_price);\r\n        }\r\n        break;\r\n\r\n      case '김프':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.binancePrice && b.binancePrice) {\r\n              return (\r\n                kimchiPremiumRatio(\r\n                  a.trade_price,\r\n                  a.binancePrice,\r\n                  myExchangeRate,\r\n                ) -\r\n                kimchiPremiumRatio(\r\n                  b.trade_price,\r\n                  b.binancePrice,\r\n                  myExchangeRate,\r\n                )\r\n              );\r\n            } else if (a.binancePrice && !b.binancePrice) {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          });\r\n        } else {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.binancePrice && b.binancePrice) {\r\n              return (\r\n                kimchiPremiumRatio(\r\n                  b.trade_price,\r\n                  b.binancePrice,\r\n                  myExchangeRate,\r\n                ) -\r\n                kimchiPremiumRatio(\r\n                  a.trade_price,\r\n                  a.binancePrice,\r\n                  myExchangeRate,\r\n                )\r\n              );\r\n            } else if (a.binancePrice && !b.binancePrice) {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          });\r\n        }\r\n        break;\r\n\r\n      case '전일대비':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort(\r\n            (a, b) => a.signed_change_rate - b.signed_change_rate,\r\n          );\r\n        } else {\r\n          socketDatas.sort(\r\n            (a, b) => b.signed_change_rate - a.signed_change_rate,\r\n          );\r\n        }\r\n        break;\r\n\r\n      case '고가대비(52주)':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort(\r\n            (a, b) => highest_52_week_rate(a) - highest_52_week_rate(b),\r\n          );\r\n        } else {\r\n          socketDatas.sort(\r\n            (a, b) => highest_52_week_rate(b) - highest_52_week_rate(a),\r\n          );\r\n        }\r\n        break;\r\n\r\n      case '저가대비(52주)':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort(\r\n            (a, b) => lowest_52_week_rate(a) - lowest_52_week_rate(b),\r\n          );\r\n        } else {\r\n          socketDatas.sort(\r\n            (a, b) => lowest_52_week_rate(b) - lowest_52_week_rate(a),\r\n          );\r\n        }\r\n        break;\r\n\r\n      case '거래액(일)':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort(\r\n            (a, b) => a.acc_trade_price_24h - b.acc_trade_price_24h,\r\n          );\r\n        } else {\r\n          socketDatas.sort(\r\n            (a, b) => b.acc_trade_price_24h - a.acc_trade_price_24h,\r\n          );\r\n        }\r\n        break;\r\n    }\r\n  }, [socketDatas, tableSortValue, tableSortUpDown]);\r\n\r\n  return (\r\n    <styled.CoinListWrapper>\r\n      {filteredSocketDatas\r\n        ? filteredSocketDatas.map((data) => {\r\n            return (\r\n              <styled.CoinBox\r\n                key={data.code}\r\n                id={data.code}\r\n                onClick={clickCoinHandler}\r\n                $selected={selectedCoin[0]?.market === data.code}\r\n              >\r\n                <div>\r\n                  <img\r\n                    alt={`${data.code?.split('-')[1]} 아이콘`}\r\n                    width=\"15\"\r\n                    height=\"15\"\r\n                    decoding=\"async\"\r\n                    data-nimg=\"1\"\r\n                    className=\"rounded-full\"\r\n                    src={`https://static.upbit.com/logos/${data.code?.split(\r\n                      '-',\r\n                    )[1]}.png`}\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n\r\n                <styled.CoinBoxName>\r\n                  <styled.CoinBoxNameKorean>\r\n                    <div>\r\n                      {\r\n                        marketCodes.filter(\r\n                          (code) => code?.market === data.code,\r\n                        )[0]?.korean_name\r\n                      }\r\n                    </div>\r\n                  </styled.CoinBoxNameKorean>\r\n                  <styled.CoinBoxNameMarket>\r\n                    {\r\n                      marketCodes\r\n                        .filter((code) => code?.market === data.code)[0]\r\n                        ?.market?.split('-')[1]\r\n                    }\r\n                  </styled.CoinBoxNameMarket>\r\n                </styled.CoinBoxName>\r\n                <styled.CoinBoxPrice>\r\n                  <styled.CoinBoxPriceKorean>\r\n                    {data.trade_price?.toLocaleString('ko-KR')}\r\n                  </styled.CoinBoxPriceKorean>\r\n                  <styled.CoinBoxPriceBinance>\r\n                    {data.binancePrice\r\n                      ? binancePriceToKRW(\r\n                          data.binancePrice,\r\n                          myExchangeRate,\r\n                        ).toLocaleString('ko-KR')\r\n                      : ''}\r\n                  </styled.CoinBoxPriceBinance>\r\n                </styled.CoinBoxPrice>\r\n                <styled.CoinBoxKimchiPremium\r\n                  $isPositive={\r\n                    data.binancePrice\r\n                      ? data.trade_price >\r\n                        binancePriceToKRW(data.binancePrice, myExchangeRate)\r\n                        ? 'true'\r\n                        : 'false'\r\n                      : 'none'\r\n                  }\r\n                >\r\n                  <styled.CoinBoxKimchiPremiumRate>\r\n                    {data.binancePrice ? (\r\n                      <>\r\n                        {kimchiPremiumRatio(\r\n                          data.trade_price,\r\n                          data.binancePrice,\r\n                          myExchangeRate,\r\n                        ) > 0 && '+'}\r\n                        {kimchiPremiumRatio(\r\n                          data.trade_price,\r\n                          data.binancePrice,\r\n                          myExchangeRate,\r\n                        ).toFixed(2)}\r\n                        %\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </styled.CoinBoxKimchiPremiumRate>\r\n                  <styled.CoinBoxKimchiPremiumDiff>\r\n                    {data.binancePrice ? (\r\n                      <>\r\n                        {kimchiPremiumDiff(\r\n                          data.trade_price,\r\n                          data.binancePrice,\r\n                          myExchangeRate,\r\n                        ) > 0 && '+'}\r\n                        {kimchiPremiumDiff(\r\n                          data.trade_price,\r\n                          data.binancePrice,\r\n                          myExchangeRate,\r\n                        ).toFixed(2)}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </styled.CoinBoxKimchiPremiumDiff>\r\n                </styled.CoinBoxKimchiPremium>\r\n                <styled.CoinBoxChange $changeType={data.change}>\r\n                  <styled.CoinBoxChangeRate>\r\n                    {data.signed_change_rate > 0 ? '+' : null}\r\n                    {(data.signed_change_rate * 100).toFixed(2)}%\r\n                  </styled.CoinBoxChangeRate>\r\n                  <styled.CoinBoxChangePrice>\r\n                    {data.signed_change_price?.toLocaleString('ko-KR')}\r\n                  </styled.CoinBoxChangePrice>\r\n                </styled.CoinBoxChange>\r\n                <styled.CoinBoxHighestWeek>\r\n                  <styled.CoinBoxHighestWeekRate>\r\n                    {data.highest_52_week_price\r\n                      ? highest_52_week_rate(data).toFixed(2) + '%'\r\n                      : null}\r\n                  </styled.CoinBoxHighestWeekRate>\r\n                  <styled.CoinBoxHighestWeekPrice>\r\n                    {data.highest_52_week_price\r\n                      ? data.highest_52_week_price?.toLocaleString('ko-KR')\r\n                      : null}\r\n                  </styled.CoinBoxHighestWeekPrice>\r\n                </styled.CoinBoxHighestWeek>\r\n                <styled.CoinBoxLowestWeek>\r\n                  <styled.CoinBoxLowestWeekRate>\r\n                    {data.lowest_52_week_price\r\n                      ? '+' + lowest_52_week_rate(data).toFixed(2) + '%'\r\n                      : null}\r\n                  </styled.CoinBoxLowestWeekRate>\r\n                  <styled.CoinBoxLowestWeekPrice>\r\n                    {data.lowest_52_week_price\r\n                      ? data.lowest_52_week_price?.toLocaleString('ko-KR')\r\n                      : null}\r\n                  </styled.CoinBoxLowestWeekPrice>\r\n                </styled.CoinBoxLowestWeek>\r\n                <styled.CoinBoxVolume>\r\n                  <div>\r\n                    {Math.ceil(\r\n                      convertMillonWon(data.acc_trade_price_24h),\r\n                    )?.toLocaleString('ko-KR')}\r\n                  </div>\r\n                  <div>백만</div>\r\n                </styled.CoinBoxVolume>\r\n              </styled.CoinBox>\r\n            );\r\n          })\r\n        : null}\r\n    </styled.CoinListWrapper>\r\n  );\r\n}\r\n\r\nexport default memo(UpbitTable);\r\n","const options = { method: 'GET', headers: { accept: 'application/json' } };\r\n\r\nexport const fetchBithumbTicker = async () => {\r\n  const bithumbTicker = await (\r\n    await fetch('https://api.bithumb.com/public/ticker/ALL_KRW', options)\r\n  )\r\n    .json()\r\n    .catch((error) => {\r\n      console.error('bithumb ticker api 오류 발생', error);\r\n    });\r\n\r\n  return bithumbTicker.data;\r\n};\r\n","import { atom } from 'recoil';\r\nimport { IBithumbTicker } from 'components/bithumb/Bithumb.type';\r\n\r\nexport const bithumbMarketCodesState = atom<string[]>({\r\n  key: 'bithumbMarketCodesState',\r\n  default: [],\r\n});\r\n\r\nexport const selectedBithumbCoinState = atom<string>({\r\n  key: 'selectedBithumbCoinState',\r\n  default: 'BTC',\r\n});\r\n\r\nexport const selectedBithumbCoinInfoState = atom<IBithumbTicker | null>({\r\n  key: 'selectedBithumbCoinInfoState',\r\n  default: null,\r\n});\r\n","import { useEffect, useState } from 'react';\r\nimport useFetchBithumbTicker from './useFetchBithumbticker';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { bithumbMarketCodesState } from 'recoil/atoms/bithumb';\r\nimport {\r\n  IBithumbTicker,\r\n  IBithumbWsTicker,\r\n} from 'components/bithumb/Bithumb.type';\r\nimport useBinanceTicker from 'hooks/binance/useBinanceTicker';\r\nimport { updateBithumbSocketDataWithBinance } from 'hooks/binance/updateBithumbSocketDataWithBinance';\r\n\r\nexport default function useBithumbWsTicker() {\r\n  const marketCodes = useRecoilValue(bithumbMarketCodesState);\r\n  const fetchData = useFetchBithumbTicker();\r\n  const [socketDatas, setSocketDatas] = useState<IBithumbTicker[]>([]);\r\n  const { binanceTickers } = useBinanceTicker();\r\n\r\n  useEffect(() => {\r\n    if (marketCodes.length > 0 && fetchData.length > 0) {\r\n      setSocketDatas(fetchData);\r\n      const ws = new WebSocket('wss://pubwss.bithumb.com/pub/ws');\r\n\r\n      ws.onopen = () => {\r\n        if (ws.readyState === 1) {\r\n          ws.send(\r\n            JSON.stringify({\r\n              type: 'ticker',\r\n              symbols: marketCodes.map((x: string) => {\r\n                return x + '_KRW';\r\n              }),\r\n              tickTypes: ['MID', '24H'],\r\n            }),\r\n          );\r\n        }\r\n      };\r\n\r\n      ws.onmessage = async (e) => {\r\n        const data: { type: string; content: IBithumbWsTicker } =\r\n          await JSON.parse(e.data);\r\n\r\n        if (data.type === 'ticker') {\r\n          const {\r\n            tickType,\r\n            symbol,\r\n            closePrice,\r\n            lowPrice,\r\n            highPrice,\r\n            prevClosePrice,\r\n            value,\r\n            date,\r\n            time,\r\n          } = data.content;\r\n\r\n          setSocketDatas((prevState) => {\r\n            const existingIndex = prevState.findIndex(\r\n              (item) => item.symbol === symbol.replace('_KRW', ''),\r\n            );\r\n\r\n            if (existingIndex !== -1) {\r\n              if (tickType === 'MID') {\r\n                prevState[existingIndex] = {\r\n                  ...prevState[existingIndex],\r\n                  closing_price: closePrice,\r\n                  min_price: lowPrice,\r\n                  max_price: highPrice,\r\n                  prev_closing_price: prevClosePrice,\r\n                  date: date,\r\n                  time: time,\r\n                };\r\n                return [...prevState];\r\n              } else {\r\n                prevState[existingIndex] = {\r\n                  ...prevState[existingIndex],\r\n                  acc_trade_value_24H: value,\r\n                };\r\n                return [...prevState];\r\n              }\r\n            }\r\n            return [...prevState];\r\n          });\r\n        }\r\n      };\r\n\r\n      return () => {\r\n        if (ws.readyState !== 0) {\r\n          ws.close();\r\n        }\r\n      };\r\n    }\r\n  }, [marketCodes, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (binanceTickers) {\r\n      const newList = updateBithumbSocketDataWithBinance(\r\n        socketDatas,\r\n        binanceTickers,\r\n      );\r\n      setSocketDatas(newList);\r\n    }\r\n  }, [binanceTickers]);\r\n\r\n  return socketDatas;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { fetchBithumbTicker } from 'api/bithumb/fetchBithumbTicker';\r\nimport { IBithumbTicker } from 'components/bithumb/Bithumb.type';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { bithumbMarketCodesState } from 'recoil/atoms/bithumb';\r\n\r\ntype IFetchTicker = [\r\n  string,\r\n  {\r\n    opening_price: string;\r\n    closing_price: string;\r\n    min_price: string;\r\n    max_price: string;\r\n    units_traded: string;\r\n    acc_trade_value: string;\r\n    prev_closing_price: string;\r\n    units_traded_24H: string;\r\n    acc_trade_value_24H: string;\r\n    fluctate_24H: string;\r\n    fluctate_rate_24H: string;\r\n  },\r\n];\r\n\r\nexport default function useFetchBithumbTicker() {\r\n  const setMarketCodes = useSetRecoilState(bithumbMarketCodesState);\r\n  const [fetchData, setFetchData] = useState<IBithumbTicker[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchBithumbTicker().then((res) => {\r\n      const fetchArr: IFetchTicker[] = Object.entries(res);\r\n      fetchArr.splice(fetchArr.length - 1); // 배열 마지막 날짜 값 제거\r\n\r\n      // 빗썸 ticker 전처리\r\n      const tickerData: IBithumbTicker[] = [];\r\n      fetchArr.map((data) => {\r\n        tickerData.push({ ...data[1], symbol: data[0] });\r\n      });\r\n      setFetchData(tickerData);\r\n\r\n      // 빗썸 마켓 데이터 recoil에 저장\r\n      setMarketCodes(Object.keys(res));\r\n    });\r\n  }, []);\r\n\r\n  return fetchData;\r\n}\r\n","import { IBithumbTicker } from 'components/bithumb/Bithumb.type';\r\nimport { IBinanceTicker } from './useBinanceTicker';\r\nexport function updateBithumbSocketDataWithBinance(\r\n  socketData: IBithumbTicker[],\r\n  binanceTickers: IBinanceTicker[],\r\n): IBithumbTicker[] {\r\n  const removeUSDT = (symbol: string) => {\r\n    return symbol.replace('USDT', '');\r\n  };\r\n\r\n  return socketData.map((item) => {\r\n    const binanceTicker = binanceTickers?.find(\r\n      (ticker) => removeUSDT(ticker.s) === item.symbol,\r\n    );\r\n    if (binanceTicker) {\r\n      return {\r\n        ...item,\r\n        binancePrice: binanceTicker.c,\r\n      };\r\n    }\r\n    return item;\r\n  });\r\n}\r\n","const judgeColor = (num: number) => {\r\n  if (num > 0) {\r\n    return 'RISE';\r\n  } else if (num < 0) {\r\n    return 'FALL';\r\n  } else {\r\n    return 'EVEN';\r\n  }\r\n};\r\n\r\nexport default judgeColor;\r\n","import { atom } from 'recoil';\r\n\r\nexport interface ICoingeckoCoinData {\r\n  id: string;\r\n  name: string;\r\n  api_symbol: string;\r\n  symbol: string;\r\n  market_cap_rank: number;\r\n  thumb: string;\r\n  large: string;\r\n}\r\n\r\nexport const coingeckoCoinDataState = atom<ICoingeckoCoinData[]>({\r\n  key: 'coingeckoDataState',\r\n  default: [],\r\n});\r\n","import { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {\r\n  ICoingeckoCoinData,\r\n  coingeckoCoinDataState,\r\n} from 'recoil/atoms/coingecko';\r\n\r\nexport default function useMatchCoingecko(bithumbCoinSymbol: string) {\r\n  const coingeckoCoinData = useRecoilValue(coingeckoCoinDataState);\r\n  const [thumb, setThumb] = useState('');\r\n  const [coinName, setCoinName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const target = coingeckoCoinData.filter((coin: ICoingeckoCoinData) => {\r\n      return coin.symbol === bithumbCoinSymbol;\r\n    });\r\n    setCoinName(target[0].name);\r\n    setThumb(target[0].large);\r\n  }, []);\r\n\r\n  return { thumb, coinName };\r\n}\r\n","import * as styled from './Table.styles';\r\nimport { IBithumbTicker } from 'components/bithumb/Bithumb.type';\r\nimport { convertMillonWon } from 'utils/convertMillonWon';\r\nimport { useEffect } from 'react';\r\nimport { useRecoilValue, useRecoilState, useSetRecoilState } from 'recoil';\r\nimport judgeColor from 'utils/judgeColor';\r\nimport { exchangeRateState } from 'recoil/atoms/exchange';\r\nimport {\r\n  binancePriceToKRW,\r\n  changes,\r\n  changesRatio,\r\n  highRatio,\r\n  kimchiPremiumDiff,\r\n  kimchiPremiumRatio,\r\n  lowRatio,\r\n} from 'utils/priceCalc';\r\nimport {\r\n  selectedBithumbCoinInfoState,\r\n  selectedBithumbCoinState,\r\n} from 'recoil/atoms/bithumb';\r\nimport useMatchCoingecko from 'hooks/bithumb/useMatchCoingecko';\r\n\r\ninterface IProps {\r\n  socketData: IBithumbTicker;\r\n}\r\n\r\nexport default function BithumbTable({ socketData }: IProps) {\r\n  const {\r\n    symbol,\r\n    closing_price,\r\n    min_price,\r\n    max_price,\r\n    acc_trade_value_24H,\r\n    binancePrice,\r\n  } = socketData;\r\n\r\n  const [selectedBithumbCoin, setSelectedBithumbCoin] = useRecoilState(\r\n    selectedBithumbCoinState,\r\n  );\r\n  const setSelectedBithumbCoinInfo = useSetRecoilState(\r\n    selectedBithumbCoinInfoState,\r\n  );\r\n  const { thumb, coinName } = useMatchCoingecko(symbol);\r\n  const nowPrice = Number(closing_price);\r\n\r\n  useEffect(() => {\r\n    if (socketData.symbol === selectedBithumbCoin) {\r\n      setSelectedBithumbCoinInfo(socketData);\r\n    }\r\n  }, [selectedBithumbCoin, socketData]);\r\n\r\n  const clickCoinHandler = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setSelectedBithumbCoin(e.currentTarget.id);\r\n  };\r\n\r\n  const myExchangeRate = useRecoilValue(exchangeRateState);\r\n\r\n  return (\r\n    <>\r\n      <styled.CoinBox\r\n        key={symbol}\r\n        id={symbol}\r\n        onClick={clickCoinHandler}\r\n        $selected={selectedBithumbCoin === socketData.symbol}\r\n      >\r\n        <div>\r\n          <img\r\n            alt={`${coinName} 아이콘`}\r\n            width=\"15\"\r\n            height=\"15\"\r\n            decoding=\"async\"\r\n            data-nimg=\"1\"\r\n            className=\"rounded-full\"\r\n            src={thumb}\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n        <styled.CoinBoxName>\r\n          <styled.CoinBoxNameKorean>\r\n            <div>{coinName}</div>\r\n          </styled.CoinBoxNameKorean>\r\n          <styled.CoinBoxNameMarket>{symbol}</styled.CoinBoxNameMarket>\r\n        </styled.CoinBoxName>\r\n        <styled.CoinBoxPrice>\r\n          <styled.CoinBoxPriceKorean>\r\n            {Number(closing_price).toLocaleString('ko-KR')}\r\n          </styled.CoinBoxPriceKorean>\r\n          <styled.CoinBoxPriceBinance>{`${\r\n            binancePrice\r\n              ? binancePriceToKRW(binancePrice, myExchangeRate).toLocaleString(\r\n                  'ko-KR',\r\n                )\r\n              : ''\r\n          }`}</styled.CoinBoxPriceBinance>\r\n        </styled.CoinBoxPrice>\r\n        <styled.CoinBoxKimchiPremium\r\n          $isPositive={\r\n            binancePrice\r\n              ? nowPrice > binancePriceToKRW(binancePrice, myExchangeRate)\r\n                ? 'true'\r\n                : 'false'\r\n              : 'none'\r\n          }\r\n        >\r\n          <styled.CoinBoxKimchiPremiumRate>\r\n            {binancePrice ? (\r\n              <>\r\n                {kimchiPremiumRatio(nowPrice, binancePrice, myExchangeRate) >\r\n                  0 && '+'}\r\n                {kimchiPremiumRatio(\r\n                  nowPrice,\r\n                  binancePrice,\r\n                  myExchangeRate,\r\n                ).toFixed(2)}\r\n                %\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </styled.CoinBoxKimchiPremiumRate>\r\n          <styled.CoinBoxKimchiPremiumDiff>\r\n            {binancePrice ? (\r\n              <>\r\n                {kimchiPremiumDiff(nowPrice, binancePrice, myExchangeRate) >\r\n                  0 && '+'}\r\n                {kimchiPremiumDiff(\r\n                  nowPrice,\r\n                  binancePrice,\r\n                  myExchangeRate,\r\n                ).toFixed(2)}\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </styled.CoinBoxKimchiPremiumDiff>\r\n        </styled.CoinBoxKimchiPremium>\r\n        <styled.CoinBoxChange $changeType={judgeColor(Number(changesRatio))}>\r\n          <styled.CoinBoxChangeRate>\r\n            {changesRatio(socketData) > 0 ? '+' : null}\r\n            {changesRatio(socketData).toFixed(2)}%\r\n          </styled.CoinBoxChangeRate>\r\n          <styled.CoinBoxChangePrice>\r\n            {changes(socketData).toLocaleString('ko-KR')}\r\n          </styled.CoinBoxChangePrice>\r\n        </styled.CoinBoxChange>\r\n        <styled.CoinBoxHighestWeek>\r\n          <styled.CoinBoxHighestWeekRate>\r\n            {highRatio(socketData) > 0 ? '+' : null}\r\n            {highRatio(socketData).toFixed(2)}%\r\n          </styled.CoinBoxHighestWeekRate>\r\n          <styled.CoinBoxHighestWeekPrice>\r\n            {Number(max_price).toLocaleString('ko-KR')}\r\n          </styled.CoinBoxHighestWeekPrice>\r\n        </styled.CoinBoxHighestWeek>\r\n        <styled.CoinBoxLowestWeek>\r\n          <styled.CoinBoxLowestWeekRate>\r\n            {'+' + lowRatio(socketData).toFixed(2) + '%'}\r\n          </styled.CoinBoxLowestWeekRate>\r\n          <styled.CoinBoxLowestWeekPrice>\r\n            {Number(min_price).toLocaleString('ko-KR')}\r\n          </styled.CoinBoxLowestWeekPrice>\r\n        </styled.CoinBoxLowestWeek>\r\n        <styled.CoinBoxVolume>\r\n          <div>\r\n            {Math.ceil(\r\n              convertMillonWon(Number(Number(acc_trade_value_24H))),\r\n            ).toLocaleString('ko-KR')}\r\n          </div>\r\n          <div>백만</div>\r\n        </styled.CoinBoxVolume>\r\n      </styled.CoinBox>\r\n    </>\r\n  );\r\n}\r\n","export const getCoingeckoData = async () => {\r\n  const CoingeckoCoinData = await (\r\n    await fetch('https://api.coingecko.com/api/v3/search?locale=ko')\r\n  ).json();\r\n\r\n  return CoingeckoCoinData;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport useBithumbWsTicker from 'hooks/bithumb/useBithumbWsTicker';\r\nimport BithumbTable from '../Table/BithumbTable';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport {\r\n  ICoingeckoCoinData,\r\n  coingeckoCoinDataState,\r\n} from 'recoil/atoms/coingecko';\r\nimport { tableSortUpDownState, tableSortValueState } from 'recoil/atoms/table';\r\nimport { getCoingeckoData } from 'api/coingecko/getCoingeckoData';\r\nimport {\r\n  changesRatio,\r\n  highRatio,\r\n  kimchiPremiumRatio,\r\n  lowRatio,\r\n} from 'utils/priceCalc';\r\nimport { searchCoinState } from 'recoil/atoms/common';\r\nimport { exchangeRateState } from 'recoil/atoms/exchange';\r\n\r\nexport function Bithumb() {\r\n  const socketDatas = useBithumbWsTicker();\r\n\r\n  const [coingeckoCoinData, setCoingeckoData] = useRecoilState(\r\n    coingeckoCoinDataState,\r\n  );\r\n  useEffect(() => {\r\n    getCoingeckoData().then((res) => {\r\n      setCoingeckoData(res.coins);\r\n    });\r\n  }, []);\r\n  const searchCoin = useRecoilValue(searchCoinState);\r\n  const [filteredSocketDatas, setFilteredSocketDatas] = useState(socketDatas);\r\n\r\n  useEffect(() => {\r\n    const filteredSocketDatas = socketDatas.filter((socketData) =>\r\n      coingeckoCoinData.some(\r\n        (gecko: ICoingeckoCoinData) =>\r\n          gecko.symbol == socketData.symbol &&\r\n          gecko.name.toLowerCase().includes(searchCoin.toLowerCase()),\r\n      ),\r\n    );\r\n    setFilteredSocketDatas(filteredSocketDatas);\r\n  }, [searchCoin, socketDatas]);\r\n\r\n  const myExchangeRate = useRecoilValue(exchangeRateState);\r\n\r\n  // TODO|서지수 - 모듈화 예정\r\n  const tableSortValue = useRecoilValue(tableSortValueState);\r\n  const tableSortUpDown = useRecoilValue(tableSortUpDownState);\r\n  useEffect(() => {\r\n    switch (tableSortValue) {\r\n      case '코인':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.symbol > b.symbol) {\r\n              return 1;\r\n            } else {\r\n              return -1;\r\n            }\r\n          });\r\n        } else {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.symbol > b.symbol) {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          });\r\n        }\r\n        break;\r\n      case '현재가':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort(\r\n            (a, b) => Number(a.closing_price) - Number(b.closing_price),\r\n          );\r\n        } else {\r\n          socketDatas.sort(\r\n            (a, b) => Number(b.closing_price) - Number(a.closing_price),\r\n          );\r\n        }\r\n        break;\r\n      case '김프':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.binancePrice && b.binancePrice) {\r\n              return (\r\n                kimchiPremiumRatio(\r\n                  Number(a.closing_price),\r\n                  a.binancePrice,\r\n                  myExchangeRate,\r\n                ) -\r\n                kimchiPremiumRatio(\r\n                  Number(b.closing_price),\r\n                  b.binancePrice,\r\n                  myExchangeRate,\r\n                )\r\n              );\r\n            } else if (a.binancePrice && !b.binancePrice) {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          });\r\n        } else {\r\n          socketDatas.sort((a, b) => {\r\n            if (a.binancePrice && b.binancePrice) {\r\n              return (\r\n                kimchiPremiumRatio(\r\n                  Number(b.closing_price),\r\n                  b.binancePrice,\r\n                  myExchangeRate,\r\n                ) -\r\n                kimchiPremiumRatio(\r\n                  Number(a.closing_price),\r\n                  a.binancePrice,\r\n                  myExchangeRate,\r\n                )\r\n              );\r\n            } else if (a.binancePrice && !b.binancePrice) {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          });\r\n        }\r\n        break;\r\n      case '전일대비':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => changesRatio(a) - changesRatio(b));\r\n        } else {\r\n          socketDatas.sort((a, b) => changesRatio(b) - changesRatio(a));\r\n        }\r\n        break;\r\n      case '고가대비(전일)':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => highRatio(a) - highRatio(b));\r\n        } else {\r\n          socketDatas.sort((a, b) => highRatio(b) - highRatio(a));\r\n        }\r\n        break;\r\n      case '저가대비(전일)':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort((a, b) => lowRatio(a) - lowRatio(b));\r\n        } else {\r\n          socketDatas.sort((a, b) => lowRatio(b) - lowRatio(a));\r\n        }\r\n        break;\r\n      case '거래액(일)':\r\n        if (tableSortUpDown) {\r\n          socketDatas.sort(\r\n            (a, b) =>\r\n              Number(a.acc_trade_value_24H) - Number(b.acc_trade_value_24H),\r\n          );\r\n        } else {\r\n          socketDatas.sort(\r\n            (a, b) =>\r\n              Number(b.acc_trade_value_24H) - Number(a.acc_trade_value_24H),\r\n          );\r\n        }\r\n        break;\r\n    }\r\n  }, [socketDatas, tableSortValue, tableSortUpDown]);\r\n\r\n  return (\r\n    <>\r\n      {filteredSocketDatas.map((socketData) => {\r\n        return <BithumbTable key={socketData.symbol} socketData={socketData} />;\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const TableHeaderContainer = styled.div`\r\n  height: 3rem;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 1.5fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FaSortUp, FaSortDown } from 'react-icons/fa';\r\n\r\nexport const TableHeaderItemContainer = styled.button<{ $value?: string }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${({ $value }) => $value !== '코인' && 'flex-end'};\r\n  gap: 0.0625rem;\r\n\r\n  color: ${({ theme }) => theme.colors.heading2};\r\n  font-family: DM Sans;\r\n  font-size: 0.75rem;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  letter-spacing: -0.0075rem;\r\n\r\n  background-color: inherit;\r\n  border: 0;\r\n\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: ${({ theme }) => theme.colors.text1};\r\n  }\r\n`;\r\n\r\nexport const SortIconWrapper = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const SortUpIcon = styled(FaSortUp)`\r\n  color: ${({ theme }) => theme.colors.heading2};\r\n  &.active {\r\n    color: ${({ theme }) => theme.colors.text1};\r\n  }\r\n`;\r\n\r\nexport const SortDownIcon = styled(FaSortDown)`\r\n  color: ${({ theme }) => theme.colors.heading2};\r\n  &.active {\r\n    color: ${({ theme }) => theme.colors.text1};\r\n  }\r\n`;\r\n","import * as styled from './TableHeaderItem.styles';\r\nimport { useRecoilState } from 'recoil';\r\nimport { tableSortUpDownState, tableSortValueState } from 'recoil/atoms/table';\r\n\r\ninterface IProps {\r\n  value: string;\r\n}\r\n\r\nexport const TableHeaderItem = ({ value }: IProps) => {\r\n  const [tableSortValue, setTableSortValue] =\r\n    useRecoilState(tableSortValueState);\r\n  const [tableSortUpDown, setTableSortUpDown] =\r\n    useRecoilState(tableSortUpDownState);\r\n  const isSameValue = tableSortValue === value;\r\n\r\n  const changeSortVlaue = () => {\r\n    if (isSameValue) {\r\n      setTableSortUpDown(!tableSortUpDown);\r\n    } else {\r\n      setTableSortValue(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <styled.TableHeaderItemContainer\r\n      $value={value}\r\n      onClick={changeSortVlaue}\r\n      className={isSameValue ? 'active' : ''}\r\n    >\r\n      {value}\r\n      <styled.SortIconWrapper>\r\n        <styled.SortUpIcon\r\n          className={isSameValue ? (tableSortUpDown ? 'active' : '') : ''}\r\n        />\r\n        <styled.SortDownIcon\r\n          className={isSameValue ? (tableSortUpDown ? '' : 'active') : ''}\r\n        />\r\n      </styled.SortIconWrapper>\r\n    </styled.TableHeaderItemContainer>\r\n  );\r\n};\r\n","import * as styled from './TableHeader.styles';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { baseExchangeState } from 'recoil/atoms/common';\r\nimport { TableHeaderItem } from './TableHeaderItem';\r\n\r\nexport const TableHeader = () => {\r\n  const baseExchange = useRecoilValue(baseExchangeState);\r\n\r\n  return (\r\n    <styled.TableHeaderContainer>\r\n      <div></div>\r\n      <TableHeaderItem value=\"코인\" />\r\n      <TableHeaderItem value=\"현재가\" />\r\n      <TableHeaderItem value=\"김프\" />\r\n      <TableHeaderItem value=\"전일대비\" />\r\n      <TableHeaderItem\r\n        value={`고가대비${baseExchange === 'upbit' ? '(52주)' : '(전일)'}`}\r\n      />\r\n      <TableHeaderItem\r\n        value={`저가대비${baseExchange === 'upbit' ? '(52주)' : '(전일)'}`}\r\n      />\r\n      <TableHeaderItem value=\"거래액(일)\" />\r\n    </styled.TableHeaderContainer>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\ninterface IExchangeRate {\r\n  value: number;\r\n}\r\n\r\nconst useFetchExchangeRate = () => {\r\n  const [exchangeRate, setExchangeRate] = useState<number>(0);\r\n  const SSE_URL = process.env.REACT_APP_FX_IDC_API_URL;\r\n\r\n  useEffect(() => {\r\n    const eventSource = new EventSource(SSE_URL!);\r\n\r\n    eventSource.onmessage = (event) => {\r\n      const json: IExchangeRate = JSON.parse(event.data);\r\n\r\n      if (json.value) {\r\n        const rate = json.value;\r\n        setExchangeRate(rate);\r\n      }\r\n    };\r\n\r\n    eventSource.onerror = (err) => {\r\n      console.error('Server-Sent Events Error:', err);\r\n      eventSource.close();\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, []);\r\n\r\n  return { exchangeRate };\r\n};\r\n\r\nexport default useFetchExchangeRate;\r\n","import styled from 'styled-components';\r\nimport { FiChevronDown } from 'react-icons/fi';\r\nimport { CgCheck } from 'react-icons/cg';\r\n\r\nexport const SelectBox = styled.div<{ $disabled?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  padding: 8px;\r\n  border-radius: 10px;\r\n  background-color: ${({ theme }) => theme.colors.bg_element6};\r\n  border: 1px solid ${({ theme }) => theme.colors.border1};\r\n  align-self: center;\r\n  gap: 0.8rem;\r\n  box-shadow: ${({ theme }) => theme.colors.alpha2} 0px 5px 10px 0px;\r\n  cursor: ${({ $disabled }) => ($disabled ? 'not-allowed' : 'pointer')};\r\n  pointer-events: ${({ $disabled }) => ($disabled ? 'none' : 'auto')};\r\n  user-select: none;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\ninterface SelectOptionsProps {\r\n  $show: boolean;\r\n}\r\n\r\nexport const SelectOptions = styled.ul<SelectOptionsProps>`\r\n  position: absolute;\r\n  list-style: none;\r\n  top: 35px;\r\n  left: 0;\r\n  overflow: hidden;\r\n  max-height: ${(props) => (props.$show ? 'none' : '0')};\r\n  padding: ${(props) => (props.$show ? '3px' : 0)};\r\n  border-radius: 8px;\r\n  background-color: ${({ theme }) => theme.colors.bg_element2};\r\n  color: ${({ theme }) => theme.colors.text1};\r\n  box-shadow: ${(props) => (props.$show ? '0 2px 4px #0003' : 'none')};\r\n  border: ${({ theme, $show }) =>\r\n    $show ? `1px solid ${theme.colors.border1}` : 'none'};\r\n  font-size: 0.8rem;\r\n  z-index: 3;\r\n`;\r\n\r\nexport const Option = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px;\r\n  transition: background-color 0.1s ease;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border1};\r\n  gap: 0.4rem;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.bg_element1};\r\n    border-radius: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownIcon = styled(FiChevronDown)`\r\n  margin-left: auto;\r\n  color: ${({ theme }) => theme.colors.icon};\r\n  height: 1rem;\r\n  width: 1rem;\r\n`;\r\n\r\nexport const Check = styled(CgCheck)<{ $isChecked: boolean }>`\r\n  color: ${(props) =>\r\n    props.$isChecked ? props.theme.colors.primary2 : 'transparent'};\r\n  margin-left: auto;\r\n  height: auto;\r\n  width: 1.3rem;\r\n`;\r\n\r\nexport const Symbol = styled.img`\r\n  width: 15px;\r\n  height: 15px;\r\n  vertical-align: middle;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDropdown } from 'hooks/useDropdown';\r\nimport { CustomSelectProps } from './CustomSelect.types';\r\nimport * as styled from './CustomSelect.styles';\r\n\r\nexport const CustomSelect: React.FC<CustomSelectProps> = ({\r\n  optionData,\r\n  onChange,\r\n  disabled,\r\n}) => {\r\n  const [currentValue, setCurrentValue] = useState(optionData[0].value);\r\n  const [currentTitle, setCurrentTitle] = useState(optionData[0].title);\r\n  const { ref, isOpen, setIsOpen } = useDropdown();\r\n\r\n  const handleOnChangeSelectValue = (e: React.MouseEvent<HTMLLIElement>) => {\r\n    e.stopPropagation();\r\n    const targetTitle = e.currentTarget.getAttribute('value') || '';\r\n    const selectedData = optionData.find((opt) => opt.title === targetTitle);\r\n\r\n    if (selectedData) {\r\n      setCurrentValue(selectedData.value);\r\n      setCurrentTitle(selectedData.title);\r\n    }\r\n\r\n    setIsOpen(false);\r\n    if (onChange && selectedData) {\r\n      onChange(selectedData.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <styled.SelectBox\r\n      ref={ref}\r\n      onClick={() => {\r\n        if (!disabled) {\r\n          setIsOpen((prev: boolean) => !prev);\r\n        }\r\n      }}\r\n      $disabled={disabled}\r\n    >\r\n      <styled.Label>\r\n        <styled.Symbol\r\n          src={optionData.find((opt) => opt.value === currentValue)?.symbol}\r\n          alt={currentValue}\r\n          loading=\"lazy\"\r\n        />\r\n        {currentTitle}\r\n      </styled.Label>\r\n      <styled.DropdownIcon />\r\n      <styled.SelectOptions $show={isOpen}>\r\n        {optionData.map((data) => (\r\n          <styled.Option\r\n            key={data.key}\r\n            value={data.title}\r\n            onClick={handleOnChangeSelectValue}\r\n          >\r\n            <styled.Symbol src={data.symbol} alt={data.value} loading=\"lazy\" />\r\n            {data.title}\r\n            <styled.Check $isChecked={data.value === currentValue} />\r\n          </styled.Option>\r\n        ))}\r\n      </styled.SelectOptions>\r\n    </styled.SelectBox>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useDropdown() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return { ref, isOpen, setIsOpen };\r\n}\r\n","export const SELECT_OPTION = [\r\n  {\r\n    key: 'upbit',\r\n    value: 'upbit',\r\n    title: '업비트',\r\n    symbol: 'https://kimpga.com/images/exchange-symbols/upbit.svg',\r\n  },\r\n  {\r\n    key: 'bithumb',\r\n    value: 'bithumb',\r\n    title: '빗썸',\r\n    symbol: 'https://kimpga.com/images/exchange-symbols/bithumb.svg',\r\n  },\r\n];\r\n\r\nexport const SELECT_SINGLE_OPTION = [\r\n  {\r\n    key: 'binance',\r\n    value: 'binance',\r\n    title: '바이낸스 USDT 마켓',\r\n    symbol: 'https://kimpga.com/images/exchange-symbols/binance.svg',\r\n  },\r\n];\r\n","import * as styled from './Table.styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { baseExchangeState, searchCoinState } from 'recoil/atoms/common';\r\nimport UpbitTable from './UpbitTable';\r\nimport { Bithumb } from 'components/bithumb';\r\nimport { upbitMarketCodesState } from 'recoil/atoms/upbit';\r\nimport { bithumbMarketCodesState } from 'recoil/atoms/bithumb';\r\nimport { TableHeader } from './TableHeader';\r\nimport { exchangeRateState } from 'recoil/atoms/exchange';\r\nimport useFetchExchangeRate from 'hooks/binance/useFetchExchangeRate';\r\nimport { CustomSelect } from 'components/CustomSelect';\r\nimport { SELECT_OPTION, SELECT_SINGLE_OPTION } from './Table.constant';\r\n\r\nexport const Table: React.FC = () => {\r\n  const [baseExchange, setBaseExchange] = useRecoilState(baseExchangeState);\r\n  const changeBaseExchange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setBaseExchange(e.target.value);\r\n  };\r\n\r\n  const upbitMarketCodes = useRecoilValue(upbitMarketCodesState);\r\n  const bithumbMarketCodes = useRecoilValue(bithumbMarketCodesState);\r\n  const [searchCoin, setSearchCoin] = useRecoilState(searchCoinState);\r\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchCoin(e.target.value);\r\n  };\r\n\r\n  const { exchangeRate } = useFetchExchangeRate();\r\n  const [myExchangeRate, mySetExchangeRate] = useRecoilState(exchangeRateState);\r\n  useEffect(() => {\r\n    mySetExchangeRate(exchangeRate);\r\n  }, [exchangeRate]);\r\n\r\n  return (\r\n    <styled.TableContainer>\r\n      <styled.TableNav>\r\n        <styled.SelectWrapper>\r\n          기준 거래소\r\n          <CustomSelect\r\n            optionData={SELECT_OPTION}\r\n            onChange={(value) => {\r\n              setBaseExchange(value);\r\n            }}\r\n          />\r\n          -\r\n          <CustomSelect optionData={SELECT_SINGLE_OPTION} disabled={true} />\r\n          해외 거래소\r\n        </styled.SelectWrapper>\r\n        <div>\r\n          암호화폐 총\r\n          {baseExchange === 'upbit'\r\n            ? upbitMarketCodes.length\r\n            : bithumbMarketCodes.length}\r\n          개\r\n          <input\r\n            type=\"text\"\r\n            name=\"검색어\"\r\n            placeholder=\"검색어를 입력하세요\"\r\n            value={searchCoin}\r\n            onChange={handleSearchInputChange}\r\n          />\r\n        </div>\r\n      </styled.TableNav>\r\n\r\n      <styled.TableBox>\r\n        <TableHeader />\r\n        {baseExchange === 'upbit' ? <UpbitTable /> : <Bithumb />}\r\n      </styled.TableBox>\r\n    </styled.TableContainer>\r\n  );\r\n};\r\n","const getTodayDate = () => {\r\n  const todayDate = new Date();\r\n  const year = todayDate.getFullYear();\r\n  const month = (todayDate.getMonth() + 1).toString().padStart(2, '0');\r\n  const date = todayDate.getDate().toString().padStart(2, '0');\r\n  const dateStr = year + '-' + month + '-' + date;\r\n  return dateStr;\r\n};\r\n\r\nexport default getTodayDate;\r\n","import { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { selectedCoinInfoState, selectedCoinState } from 'recoil/atoms/common';\r\nimport getTodayDate from 'utils/getTodayDate';\r\n\r\nfunction useCreateChart() {\r\n  const selectedCoin = useRecoilValue(selectedCoinState);\r\n  const selectedCoinInfo = useRecoilValue(selectedCoinInfoState);\r\n  const [fetchedData, setFetchedData] = useState<any>(null);\r\n  const [processedData, setProcessedData] = useState<any>(null);\r\n  const [updatedCandle, setUpdatedCandle] = useState<any>(null);\r\n\r\n  const options = { method: 'GET', headers: { Accept: 'application/json' } };\r\n  async function fetchDayCandle(\r\n    marketCode: string,\r\n    date: string,\r\n    count: number,\r\n  ) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.upbit.com/v1/candles/days?market=${marketCode}&to=${date}T09:00:00Z&count=${count}&convertingPriceUnit=KRW`,\r\n        options,\r\n      );\r\n      const result = await response.json();\r\n      setFetchedData(result);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectedCoin) {\r\n      const cachedData = sessionStorage.getItem(selectedCoin[0].market); // 시장 코드를 키로 사용\r\n      if (cachedData) {\r\n        setFetchedData(JSON.parse(cachedData));\r\n      } else {\r\n        fetchDayCandle(selectedCoin[0].market, getTodayDate(), 200);\r\n      }\r\n    }\r\n  }, [selectedCoin]);\r\n\r\n  useEffect(() => {\r\n    if (fetchedData) {\r\n      const processed = [...fetchedData].reverse().map((data: any) => {\r\n        return {\r\n          time: data.candle_date_time_kst.slice(0, 10), // 2023-10-08T09:00:00에서 T전까지\r\n          open: data.opening_price,\r\n          high: data.high_price,\r\n          low: data.low_price,\r\n          close: data.trade_price,\r\n        };\r\n      });\r\n      setProcessedData(processed);\r\n      sessionStorage.setItem(\r\n        selectedCoin[0].market,\r\n        JSON.stringify(fetchedData),\r\n      );\r\n    }\r\n  }, [fetchedData]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCoinInfo) {\r\n      setUpdatedCandle({\r\n        time: {\r\n          day: selectedCoinInfo[0]?.trade_date?.slice(6, 8),\r\n          month: selectedCoinInfo[0]?.trade_date?.slice(4, 6),\r\n          year: selectedCoinInfo[0]?.trade_date?.slice(0, 4),\r\n        },\r\n        open: selectedCoinInfo[0]?.opening_price,\r\n        high: selectedCoinInfo[0]?.high_price,\r\n        low: selectedCoinInfo[0]?.low_price,\r\n        close: selectedCoinInfo[0]?.trade_price,\r\n      });\r\n    }\r\n  }, [selectedCoinInfo]);\r\n\r\n  return { processedData, updatedCandle };\r\n}\r\nexport default useCreateChart;\r\n","import styled from 'styled-components';\r\n\r\ninterface FontColorProps {\r\n  $isPositive: string;\r\n}\r\n\r\nexport const ChartContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.bg_element4};\r\n  border-radius: 12px;\r\n  box-shadow: ${({ theme }) => theme.colors.alpha1} 0px 2px 10px 0px;\r\n  padding: 1rem 1.1rem;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nexport const CoinInfoContainer = styled.div`\r\n  display: flex;\r\n  padding: 0 0.5rem;\r\n  gap: 0.4rem;\r\n`;\r\n\r\nexport const CoinImgWrapper = styled.div``;\r\n\r\nexport const CoinInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 5px;\r\n  padding: 3px 0;\r\n`;\r\n\r\nexport const CoinIdentity = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n`;\r\n\r\nexport const CoinName = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  letter-spacing: -0.5px;\r\n  color: ${({ theme }) => theme.colors.heading1};\r\n`;\r\n\r\nexport const CoinSymbol = styled.div`\r\n  font-size: 0.8rem;\r\n  font-weight: 300;\r\n  margin-left: 5px;\r\n  color: ${({ theme }) => theme.colors.heading2};\r\n`;\r\n\r\nexport const CoinPrice = styled.div<FontColorProps>`\r\n  flex: 1;\r\n  color: ${(props) =>\r\n    props.$isPositive ? props.theme.colors.red : props.theme.colors.blue};\r\n  span {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nexport const CoinChangeWrapper = styled.div<FontColorProps>`\r\n  display: flex;\r\n  margin-left: auto;\r\n  font-size: 0.8rem;\r\n  margin-bottom: 8px;\r\n  color: ${(props) =>\r\n    props.$isPositive ? props.theme.colors.red : props.theme.colors.blue};\r\n`;\r\n\r\nexport const CoinChangeRate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  margin-right: 8px;\r\n  color: inherit;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.colors.text2};\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nexport const CoinChangePrice = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  color: inherit;\r\n`;\r\n\r\nexport const ChartRefDiv = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.colors.border1};\r\n  border-radius: 3px;\r\n  flex: 1;\r\n`;\r\n","import React, { memo, useEffect, useRef } from 'react';\r\nimport { createChart, CrosshairMode } from 'lightweight-charts';\r\nimport useCreateChart from 'api/upbit/useCreateChart';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { selectedCoinState, selectedCoinInfoState } from 'recoil/atoms/common';\r\nimport { useTheme } from 'styled-components';\r\nimport { FaCaretUp, FaCaretDown } from 'react-icons/fa';\r\nimport * as styled from './ChartRight.styles';\r\n\r\nfunction ChartRight() {\r\n  const { processedData, updatedCandle } = useCreateChart();\r\n  const selectedCoin = useRecoilValue(selectedCoinState);\r\n  const selectedCoinInfo = useRecoilValue(selectedCoinInfoState);\r\n  const theme = useTheme();\r\n\r\n  const textColor = theme.colors.text1;\r\n  const chartContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const chart = useRef<any>(null);\r\n  const newSeries = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (processedData) {\r\n      const handleResize = () => {\r\n        chart.current.applyOptions({\r\n          width: chartContainerRef.current?.clientWidth,\r\n        });\r\n      };\r\n      chart.current = createChart(chartContainerRef.current as HTMLElement, {\r\n        layout: {\r\n          background: {\r\n            color: 'transparent',\r\n          },\r\n          textColor,\r\n        },\r\n        autoSize: true,\r\n        grid: {\r\n          vertLines: {\r\n            color: theme.colors.border2,\r\n          },\r\n          horzLines: {\r\n            color: theme.colors.border2,\r\n          },\r\n        },\r\n        crosshair: {\r\n          mode: CrosshairMode.Normal,\r\n        },\r\n        leftPriceScale: {\r\n          borderVisible: false,\r\n        },\r\n        rightPriceScale: {\r\n          borderVisible: false,\r\n          textColor: theme.colors.text1,\r\n          scaleMargins: {\r\n            top: 0.1,\r\n            bottom: 0.1,\r\n          },\r\n        },\r\n        timeScale: {\r\n          borderVisible: false,\r\n          fixLeftEdge: true,\r\n          fixRightEdge: true,\r\n        },\r\n      });\r\n      chart.current.timeScale().applyOptions({\r\n        barSpacing: 8,\r\n      });\r\n\r\n      newSeries.current = chart.current.addCandlestickSeries({\r\n        upColor: 'rgb( 239, 83, 80)',\r\n        wickUpColor: 'rgb( 239, 83, 80)',\r\n        downColor: 'rgb(42,127,255)',\r\n        wickDownColor: 'rgb(42,127,255)',\r\n        borderVisible: false,\r\n      });\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      newSeries.current.setData(processedData);\r\n\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n        chart.current.remove();\r\n      };\r\n    }\r\n  }, [processedData, theme]);\r\n\r\n  useEffect(() => {\r\n    if (updatedCandle && newSeries.current) {\r\n      newSeries.current.update(updatedCandle);\r\n    }\r\n  }, [updatedCandle]);\r\n\r\n  const selectedRate = selectedCoinInfo?.[0]?.signed_change_rate;\r\n  const selectedChangePrice = selectedCoinInfo?.[0]?.signed_change_price;\r\n  const isPositiveRate = selectedRate > 0;\r\n\r\n  return (\r\n    <styled.ChartContainer>\r\n      <styled.CoinInfoContainer>\r\n        <styled.CoinImgWrapper>\r\n          <img\r\n            alt={`${selectedCoin[0].market.split('-')[1]} 아이콘`}\r\n            width=\"45\"\r\n            height=\"45px\"\r\n            decoding=\"async\"\r\n            data-nimg=\"1\"\r\n            className=\"rounded-full\"\r\n            src={`https://static.upbit.com/logos/${\r\n              selectedCoin[0].market.split('-')[1]\r\n            }.png`}\r\n            loading=\"lazy\"\r\n          />\r\n        </styled.CoinImgWrapper>\r\n        <styled.CoinInfo>\r\n          <styled.CoinIdentity>\r\n            <styled.CoinName>{selectedCoin[0].korean_name}</styled.CoinName>\r\n            <styled.CoinSymbol>\r\n              /{selectedCoin[0].market.split('-')[1]}\r\n            </styled.CoinSymbol>\r\n          </styled.CoinIdentity>\r\n\r\n          <styled.CoinPrice $isPositive={isPositiveRate ? 'true' : 'false'}>\r\n            {selectedCoinInfo?.[0]?.trade_price.toLocaleString('ko-KR')}{' '}\r\n            <span>KRW</span>\r\n          </styled.CoinPrice>\r\n        </styled.CoinInfo>\r\n\r\n        <styled.CoinChangeWrapper\r\n          $isPositive={isPositiveRate ? 'true' : 'false'}\r\n        >\r\n          <styled.CoinChangeRate>\r\n            <span>전일대비</span>\r\n            {isPositiveRate ? <FaCaretUp /> : <FaCaretDown />}\r\n            {Math.abs(selectedRate * 100).toFixed(2)}%\r\n          </styled.CoinChangeRate>\r\n          <styled.CoinChangePrice>\r\n            {selectedChangePrice > 0 ? '+' : '-'}\r\n            {Math.abs(selectedChangePrice)?.toLocaleString('ko-KR')}\r\n          </styled.CoinChangePrice>\r\n        </styled.CoinChangeWrapper>\r\n      </styled.CoinInfoContainer>\r\n\r\n      <styled.ChartRefDiv ref={chartContainerRef}></styled.ChartRefDiv>\r\n    </styled.ChartContainer>\r\n  );\r\n}\r\n\r\nexport default memo(ChartRight);\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { selectState } from 'recoil/atoms/selectState';\r\nimport { TRADING_VIEW_SYMBOLS } from './ChartLeft.constant';\r\nimport { themeState } from 'recoil/atoms/theme';\r\nimport { useTheme } from 'styled-components';\r\nimport * as styled from './ChartLeft.styles';\r\ndeclare global {\r\n  interface Window {\r\n    TradingView: any;\r\n  }\r\n}\r\n\r\nlet tvScriptLoadingPromise: Promise<void> | undefined;\r\n\r\nexport default function TradingViewWidget() {\r\n  const currentTheme = useRecoilValue(themeState);\r\n  const selectedOption = useRecoilValue(selectState);\r\n  const onLoadScriptRef = useRef<null | (() => void)>(null);\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    onLoadScriptRef.current = createWidget;\r\n\r\n    if (!tvScriptLoadingPromise) {\r\n      tvScriptLoadingPromise = new Promise<void>((resolve) => {\r\n        const script = document.createElement('script');\r\n        script.id = 'tradingview-widget-loading-script';\r\n        script.src = 'https://s3.tradingview.com/tv.js';\r\n        script.type = 'text/javascript';\r\n        script.onload = () => resolve();\r\n\r\n        document.head.appendChild(script);\r\n      });\r\n    }\r\n\r\n    tvScriptLoadingPromise.then(() => {\r\n      if (onLoadScriptRef.current) {\r\n        onLoadScriptRef.current();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      onLoadScriptRef.current = null;\r\n    };\r\n\r\n    function createWidget() {\r\n      if (\r\n        document.getElementById('tradingview_0e511') &&\r\n        'TradingView' in window\r\n      ) {\r\n        new window.TradingView.widget({\r\n          autosize: true,\r\n          symbol: getTradingViewSymbol(selectedOption),\r\n          width: '100%',\r\n          height: '100%',\r\n          interval: '15',\r\n          timezone: 'Asia/Seoul',\r\n          theme: currentTheme === 'light' ? 'light' : 'dark',\r\n          style: '1',\r\n          locale: 'kr',\r\n          enable_publishing: false,\r\n          hide_top_toolbar: true,\r\n          hide_legend: true,\r\n          save_image: false,\r\n          hide_volume: true,\r\n          backgroundColor: theme.colors.bg_element4,\r\n          container_id: 'tradingview_0e511',\r\n        });\r\n      }\r\n    }\r\n\r\n    function getTradingViewSymbol(exchange: string) {\r\n      if (exchange in TRADING_VIEW_SYMBOLS) {\r\n        return TRADING_VIEW_SYMBOLS[\r\n          exchange as keyof typeof TRADING_VIEW_SYMBOLS\r\n        ];\r\n      }\r\n      return TRADING_VIEW_SYMBOLS.BINANCE;\r\n    }\r\n  }, [selectedOption, currentTheme]);\r\n\r\n  return (\r\n    <styled.WidgetContainer>\r\n      <styled.Chart id=\"tradingview_0e511\" />\r\n    </styled.WidgetContainer>\r\n  );\r\n}\r\n","export const SELECT_OPTION = [\r\n  {\r\n    key: 'BINANCE',\r\n    value: 'BINANCE',\r\n    title: '비트코인 - Binance',\r\n    symbol: 'https://kimpga.com/images/exchange-symbols/binance.svg',\r\n  },\r\n  {\r\n    key: 'UPBIT',\r\n    value: 'UPBIT',\r\n    title: '비트코인 김치프리미엄 Ubit',\r\n    symbol: 'https://kimpga.com/images/exchange-symbols/upbit.svg',\r\n  },\r\n  {\r\n    key: 'BITHUMB',\r\n    value: 'BITHUMB',\r\n    title: '비트코인 김치프리미엄 Bithumb',\r\n    symbol: 'https://kimpga.com/images/exchange-symbols/bithumb.svg',\r\n  },\r\n];\r\n\r\nexport const TRADING_VIEW_SYMBOLS = {\r\n  BINANCE: 'BINANCE:BTCUSDT',\r\n  UPBIT:\r\n    '(BINANCE:BTCUSD/BINANCE:BTCUSD*UPBIT:BTCKRW-BINANCE:BTCUSDT*FX_IDC:USDKRW)/(BINANCE:BTCUSD*FX_IDC:USDKRW)*100',\r\n  BITHUMB:\r\n    '(BINANCE:BTCUSD/BINANCE:BTCUSD*BITHUMB:BTCKRW-BINANCE:BTCUSDT*FX_IDC:USDKRW)/(BINANCE:BTCUSD*FX_IDC:USDKRW)*100',\r\n};\r\n\r\nexport const TRADING_VIEW_TICKERS = {\r\n  BINANCE: {\r\n    name: 'Bitcoin / TetherUS',\r\n    ticker: 'BTCUSDT',\r\n    symbol1: 'https://s3-symbol-logo.tradingview.com/crypto/XTVCBTC--big.svg',\r\n    symbol2: 'https://s3-symbol-logo.tradingview.com/crypto/XTVCUSDT--big.svg',\r\n  },\r\n  UPBIT: {\r\n    name: '비트코인 김치프리미엄',\r\n    ticker: 'Upbit',\r\n    symbol1: 'https://s3-symbol-logo.tradingview.com/crypto/XTVCBTC--big.svg',\r\n    symbol2: 'https://kimpga.com/images/exchange-symbols/upbit.svg',\r\n  },\r\n  BITHUMB: {\r\n    name: '비트코인 김치프리미엄',\r\n    ticker: 'Bithumb',\r\n    symbol1: 'https://s3-symbol-logo.tradingview.com/crypto/XTVCBTC--big.svg',\r\n    symbol2: 'https://kimpga.com/images/exchange-symbols/bithumb.svg',\r\n  },\r\n};\r\n","import { atom } from 'recoil';\r\nimport { SELECT_OPTION } from '../../components/ChartLeft/ChartLeft.constant';\r\n\r\nexport const selectState = atom({\r\n  key: 'selectedOption',\r\n  default: SELECT_OPTION[0].key,\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const ChartContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  background-color: ${({ theme }) => theme.colors.bg_element4};\r\n  padding: 1rem 1.1rem;\r\n  border-radius: 12px;\r\n  box-shadow: ${({ theme }) => theme.colors.alpha1} 0px 2px 10px 0px;\r\n`;\r\n\r\nexport const SelectWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ChartInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.8rem;\r\n`;\r\n\r\nexport const ChartInfoWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const SymbolWrapper = styled.span`\r\n  display: inline-flex;\r\n  user-select: auto;\r\n  position: relative;\r\n`;\r\nexport const SymbolGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SymbolOutline = styled.span`\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SymbolOutline1 = styled(SymbolOutline)``;\r\nexport const SymbolOutline2 = styled(SymbolOutline)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  transform: translate(9px, -9px);\r\n`;\r\n\r\nexport const Symbol = styled.img`\r\n  position: relative;\r\n  height: 24px;\r\n  width: 24px;\r\n  border-radius: 50%;\r\n  z-index: 1;\r\n  background: #ccc;\r\n`;\r\n\r\nexport const ChartName = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  letter-spacing: -0.5px;\r\n  color: ${({ theme }) => theme.colors.heading1};\r\n`;\r\n\r\nexport const ChartTicker = styled.span`\r\n  font-size: 0.8rem;\r\n  font-weight: 300;\r\n  margin-left: 5px;\r\n  color: ${({ theme }) => theme.colors.heading2};\r\n`;\r\n\r\nexport const WidgetContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Chart = styled.div`\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { selectState } from 'recoil/atoms/selectState';\r\nimport { TRADING_VIEW_TICKERS } from './ChartLeft.constant';\r\nimport * as styled from './ChartLeft.styles';\r\n\r\nexport const ChartInfo = () => {\r\n  const selectedOption = useRecoilValue(selectState);\r\n  const tickerInfo = getTradingViewTicker(selectedOption);\r\n\r\n  return (\r\n    <styled.ChartInfo>\r\n      <styled.SymbolWrapper>\r\n        <styled.SymbolGroup>\r\n          <styled.SymbolOutline1>\r\n            <styled.Symbol src={tickerInfo.symbol1} alt=\"Symbol 1\" />\r\n          </styled.SymbolOutline1>\r\n          <styled.SymbolOutline2>\r\n            <styled.Symbol src={tickerInfo.symbol2} alt=\"Symbol 2\" />\r\n          </styled.SymbolOutline2>\r\n        </styled.SymbolGroup>\r\n      </styled.SymbolWrapper>\r\n      <styled.ChartInfoWrapper>\r\n        <styled.ChartName>{tickerInfo.name} </styled.ChartName>\r\n        <styled.ChartTicker>/{tickerInfo.ticker}</styled.ChartTicker>\r\n      </styled.ChartInfoWrapper>\r\n    </styled.ChartInfo>\r\n  );\r\n\r\n  function getTradingViewTicker(exchange: string) {\r\n    if (exchange in TRADING_VIEW_TICKERS) {\r\n      return TRADING_VIEW_TICKERS[\r\n        exchange as keyof typeof TRADING_VIEW_TICKERS\r\n      ];\r\n    }\r\n    return TRADING_VIEW_TICKERS.BINANCE;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport TradingViewWidget from './TradingViewWidget';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { selectState } from 'recoil/atoms/selectState';\r\nimport { CustomSelect } from 'components/CustomSelect';\r\nimport { ChartInfo } from './ChartInfo';\r\nimport { SELECT_OPTION } from './ChartLeft.constant';\r\nimport * as styled from './ChartLeft.styles';\r\n\r\nexport const ChartLeft = () => {\r\n  const setSelectState = useSetRecoilState(selectState);\r\n  return (\r\n    <styled.ChartContainer>\r\n      <styled.SelectWrapper>\r\n        <ChartInfo />\r\n        <CustomSelect\r\n          optionData={SELECT_OPTION}\r\n          onChange={(val) => {\r\n            setSelectState(val);\r\n          }}\r\n        />\r\n      </styled.SelectWrapper>\r\n      <TradingViewWidget />\r\n    </styled.ChartContainer>\r\n  );\r\n};\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nexport const firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\nexport const db = getFirestore(app);\r\n","import { onSnapshot } from 'firebase/firestore';\r\nimport { MessageType } from 'components/Message/Message.types';\r\nimport { messageQuery } from './messageQuery';\r\nimport { orderSnapshotMessages } from './orderSnapshotMessages';\r\n\r\n// 메시지를 가져오는 함수\r\nexport const fetchMessages = (\r\n  setMessages: (messages: MessageType[]) => void,\r\n  lastMessage?: MessageType | null,\r\n) => {\r\n  const q = messageQuery(lastMessage);\r\n\r\n  const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\r\n    const sortedMessages = orderSnapshotMessages(QuerySnapshot);\r\n    setMessages(sortedMessages);\r\n  });\r\n\r\n  return unsubscribe;\r\n};\r\n","import {\r\n  query,\r\n  collection,\r\n  orderBy,\r\n  onSnapshot,\r\n  limit,\r\n  startAfter,\r\n} from 'firebase/firestore';\r\nimport { db } from './config';\r\nimport { MessageType } from 'components/Message/Message.types';\r\n\r\n// Firebase Firestore 쿼리를 생성하는 함수\r\nexport function messageQuery(lastMessage?: MessageType | null) {\r\n  const baseQuery = query(\r\n    collection(db, 'messages'),\r\n    orderBy('createdAt', 'desc'),\r\n    limit(5),\r\n  );\r\n\r\n  if (lastMessage) {\r\n    // 이전 메시지 이후의 메시지만 가져오기 위해 필터링\r\n    return query(\r\n      collection(db, 'messages'),\r\n      orderBy('createdAt', 'desc'),\r\n      startAfter(lastMessage.createdAt),\r\n      limit(5),\r\n    );\r\n  }\r\n\r\n  return baseQuery;\r\n}\r\n","import { MessageType } from 'components/Message/Message.types';\r\n\r\n// Firestore 스냅샷을 처리하고 메시지를 정렬하는 함수\r\nexport function orderSnapshotMessages(QuerySnapshot: any) {\r\n  const fetchedMessages: MessageType[] = [];\r\n\r\n  QuerySnapshot.forEach((doc: any) => {\r\n    const data = doc.data();\r\n\r\n    if (data.createdAt) {\r\n      const message = {\r\n        ...data,\r\n        id: doc.id,\r\n      };\r\n      fetchedMessages.push(message);\r\n    } else {\r\n      console.warn('Skipping message without createdAt:', data);\r\n    }\r\n  });\r\n\r\n  const sortedMessages = fetchedMessages.sort(\r\n    (a, b) => a.createdAt.toMillis() - b.createdAt.toMillis(),\r\n  );\r\n\r\n  return sortedMessages;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const MessageRight = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const MessageLeft = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const UserInfo = styled.span`\r\n  display: flex;\r\n  align-items: baseline;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const UserName = styled.span`\r\n  font-weight: 500;\r\n  font-size: 0.74rem;\r\n`;\r\n\r\nexport const UserId = styled.span`\r\n  margin-left: 0.3rem;\r\n  background: ${({ theme }) => theme.colors.alpha2};\r\n  border: 1px solid ${({ theme }) => theme.colors.border1};\r\n  border-radius: 8px;\r\n  color: ${({ theme }) => theme.colors.text2};\r\n  font-size: 0.6rem;\r\n  font-weight: 300;\r\n  padding: 2px 4px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const UserMessage = styled.div`\r\n  word-break: break-all;\r\n  background-color: ${({ theme }) => theme.colors.bg_element3};\r\n  color: ${({ theme }) => theme.colors.heading1};\r\n  padding: 0.66em 0.68rem;\r\n  border-radius: 10px;\r\n  max-width: 200px;\r\n`;\r\n\r\ninterface MessageProps {\r\n  $isCurrentUser: boolean;\r\n}\r\n\r\nexport const ChatBubble = styled.div<MessageProps>`\r\n  padding: 10px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: ${(props) =>\r\n    props.$isCurrentUser ? 'flex-end' : 'flex-start'};\r\n  .scroll::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const Time = styled.span`\r\n  font-size: 0.68rem;\r\n  margin-bottom: 0.125rem;\r\n  color: ${({ theme }) => theme.colors.text2};\r\n`;\r\n\r\nexport const TimeRight = styled(Time)`\r\n  margin-right: 0.4rem;\r\n`;\r\n\r\nexport const TimeLeft = styled(Time)`\r\n  margin-left: 0.4rem;\r\n`;\r\n","import React from 'react';\r\nimport * as styled from './Message.styles';\r\nimport { MessageProps } from './Message.types';\r\n\r\nconst Message: React.FC<MessageProps> = ({ message }) => {\r\n  const storedUid = localStorage.getItem('uid');\r\n  const createdAt = message.createdAt.toDate();\r\n  const firstThreeChars = message.uid.substring(0, 3);\r\n  const formattedTime = createdAt.toLocaleTimeString([], {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n  const isCurrentUser = message.uid === storedUid;\r\n\r\n  return (\r\n    <styled.ChatBubble $isCurrentUser={isCurrentUser}>\r\n      {isCurrentUser ? (\r\n        <styled.MessageRight>\r\n          <styled.TimeRight>{formattedTime}</styled.TimeRight>\r\n          <styled.UserMessage>{message.text}</styled.UserMessage>\r\n        </styled.MessageRight>\r\n      ) : (\r\n        <styled.Wrapper>\r\n          <styled.UserInfo>\r\n            <styled.UserName>{message.name}</styled.UserName>\r\n            <styled.UserId>{firstThreeChars}</styled.UserId>\r\n          </styled.UserInfo>\r\n          <styled.MessageLeft>\r\n            <styled.UserMessage>{message.text}</styled.UserMessage>\r\n            <styled.TimeLeft>{formattedTime}</styled.TimeLeft>\r\n          </styled.MessageLeft>\r\n        </styled.Wrapper>\r\n      )}\r\n    </styled.ChatBubble>\r\n  );\r\n};\r\nexport default Message;\r\n","import { addDoc, collection, serverTimestamp } from 'firebase/firestore';\r\nimport { db } from './config';\r\n\r\nfunction getUserInfoFromLocalStorage() {\r\n  const uid = localStorage.getItem('uid');\r\n  const displayName = localStorage.getItem('displayName');\r\n  return { uid, displayName };\r\n}\r\n\r\nexport const createMessages = async (message: string) => {\r\n  if (message.trim() === '') {\r\n    alert('메시지를 입력해주세요');\r\n    return;\r\n  }\r\n  const { uid, displayName } = getUserInfoFromLocalStorage();\r\n  await addDoc(collection(db, 'messages'), {\r\n    text: message,\r\n    name: displayName,\r\n    createdAt: serverTimestamp(),\r\n    uid,\r\n  });\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default async function getNickname() {\r\n  try {\r\n    const response = await axios.get(\r\n      'https://nickname.hwanmoo.kr/?format=text&count=1',\r\n    );\r\n    const nickname = await response.data;\r\n    return nickname;\r\n  } catch (error) {\r\n    console.error('An error occurred while fetching the nickname:', error);\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const SendMessageForm = styled.form`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border-top: 1px solid ${({ theme }) => theme.colors.border1};\r\n`;\r\n\r\nexport const SendMessageWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const SendMessageInput = styled.input`\r\n  padding: 0.75rem 3.5rem 0.75rem 0.75rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.bg_element3};\r\n  color: ${({ theme }) => theme.colors.text1};\r\n  font-size: 0.75rem;\r\n\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.colors.text3};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const SendMessageButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 28px;\r\n  height: 28px;\r\n  background-color: ${({ theme }) => theme.colors.bg_element5};\r\n  border-radius: 2rem;\r\n  border: 1px solid ${({ theme }) => theme.colors.border1};\r\n  color: ${({ theme }) => theme.colors.primary1};\r\n  cursor: pointer;\r\n  transition: all 0.1s ease-out 0s;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n\r\n  svg {\r\n    height: 1.5em;\r\n    width: 1.5em;\r\n  }\r\n\r\n  &:hover {\r\n    border: 1px solid ${({ theme }) => theme.colors.primary1};\r\n    box-shadow: ${({ theme }) => theme.colors.alpha_primary1} 0px 0px 0px 3px;\r\n  }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createMessages } from '../../firebase/createMessages';\r\nimport shortId from 'shortid';\r\nimport getNickname from 'api/getNickname';\r\nimport { RiSendPlaneFill } from 'react-icons/ri';\r\nimport * as styled from './SendMessage.styles';\r\n\r\nfunction generateRandomUID() {\r\n  const randomString = shortId.generate();\r\n  const uppercaseString = randomString.replace(/[a-z]/g, (char) =>\r\n    char.toUpperCase(),\r\n  );\r\n  return uppercaseString;\r\n}\r\nasync function saveUserInfoToLocalStorage() {\r\n  const uid = generateRandomUID();\r\n  const displayName = await getNickname();\r\n  localStorage.setItem('uid', uid);\r\n  localStorage.setItem('displayName', displayName);\r\n}\r\n\r\nconst SendMessage = () => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSendMessage = async (event: any) => {\r\n    event.preventDefault();\r\n    if (message.trim() === '') {\r\n      alert('메시지를 입력해주세요');\r\n      return;\r\n    }\r\n    createMessages(message);\r\n    setMessage('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedUid = localStorage.getItem('uid');\r\n    const storedDisplayName = localStorage.getItem('displayName');\r\n    if (!storedUid || !storedDisplayName) {\r\n      saveUserInfoToLocalStorage();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <styled.SendMessageForm onSubmit={(event) => handleSendMessage(event)}>\r\n      <styled.SendMessageWrapper>\r\n        <styled.SendMessageInput\r\n          name=\"messageInput\"\r\n          type=\"text\"\r\n          placeholder=\"메시지를 입력해주세요...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <styled.SendMessageButton type=\"submit\">\r\n          <RiSendPlaneFill />\r\n        </styled.SendMessageButton>\r\n      </styled.SendMessageWrapper>\r\n    </styled.SendMessageForm>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import styled from 'styled-components';\r\nimport Modal from 'react-modal';\r\nimport { FiChevronDown } from 'react-icons/fi';\r\n\r\nexport const StyledModal = styled(Modal)`\r\n  position: fixed;\r\n  left: auto;\r\n  right: 1.5rem;\r\n  bottom: 1.5rem;\r\n  width: 320px;\r\n  max-height: calc(100vh - 16px);\r\n  transition: none;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  background-color: ${({ theme }) => theme.colors.bg_element5};\r\n  color: ${({ theme }) => theme.colors.text1};\r\n  font-size: 0.78rem;\r\n  pointer-events: auto;\r\n  box-shadow: ${({ theme }) => theme.colors.alpha1} 0px 5px 20px 0px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const ChatBoxHeader = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${({ theme }) => theme.colors.bg_element5};\r\n  color: ${({ theme }) => theme.colors.heading1};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border1};\r\n`;\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  gap: 0.3rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 0.95rem;\r\n`;\r\n\r\nexport const CloseButton = styled(FiChevronDown)`\r\n  margin: auto;\r\n  height: 1rem;\r\n  width: 1rem;\r\n  color: ${({ theme }) => theme.colors.icon};\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  gap: 0.2rem;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  & > span:last-child {\r\n    color: ${({ theme }) => theme.colors.text2};\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n\r\nexport const Nickname = styled.span`\r\n  color: ${({ theme }) => theme.colors.heading1};\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 7px;\r\n  padding: 0.2rem 0.95rem;\r\n  border: none;\r\n  font-size: 0.73rem;\r\n  gap: 0.23rem;\r\n  background-color: ${({ theme }) => theme.colors.bg_element2};\r\n  color: ${({ theme }) => theme.colors.text2};\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.bg_element1};\r\n  }\r\n`;\r\nexport const Icon = styled.span`\r\n  font-size: 0.85rem;\r\n  color: ${({ theme }) => theme.colors.primary1};\r\n`;\r\n\r\nexport const MessagesWrapper = styled.div`\r\n  padding: 0 1rem 0.5rem;\r\n  overflow-y: scroll;\r\n  scroll-behavior: smooth;\r\n  min-height: 6rem;\r\n  max-height: 24rem;\r\n  overscroll-behavior: contain;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\ninterface ScrollToBottomButtonProps {\r\n  $isVisible: boolean;\r\n}\r\n\r\nexport const ScrollToBottomButton = styled.div<ScrollToBottomButtonProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  right: 8px;\r\n  bottom: 88px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: ${({ theme }) => theme.colors.primary1};\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.24);\r\n  opacity: ${({ $isVisible }) => ($isVisible ? 1 : 0)};\r\n  transform: scale(${({ $isVisible }) => ($isVisible ? 1 : 0)});\r\n  transition: all 0.2s ease;\r\n`;\r\n\r\nexport const BottomIcon = styled(FiChevronDown)`\r\n  margin: auto;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  color: ${({ theme }) => theme.colors.bg_element5};\r\n`;\r\n","import React, { useEffect, useRef, useState, memo } from 'react';\r\nimport { fetchMessages } from '../../firebase/fetchMessages';\r\nimport { Message } from 'components/Message';\r\nimport { MessageType } from 'components/Message/Message.types';\r\nimport { SendMessage } from 'components/SendMessage';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modalIsOpenState } from 'recoil/atoms/upbit';\r\nimport { AiFillMessage } from 'react-icons/ai';\r\nimport * as styled from './ChatBox.styles';\r\n\r\n// 닉네임 업데이트 함수\r\nconst updateNickname = () => {\r\n  const userChosenNickname = prompt('변경할 닉네임을 입력해주세요');\r\n  if (userChosenNickname) {\r\n    try {\r\n      localStorage.setItem('displayName', userChosenNickname);\r\n    } catch (error) {\r\n      console.error('Error updating nickname:', error);\r\n    }\r\n  }\r\n};\r\n\r\nconst ChatBox = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useRecoilState(modalIsOpenState);\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const [messages, setMessages] = useState<MessageType[]>([]);\r\n  const storedDisplayName = localStorage.getItem('displayName');\r\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n  const messagesWrapperRef = useRef<HTMLDivElement | null>(null);\r\n  const [isAtBottom, setIsAtBottom] = useState(true);\r\n  const [lastMessage, setLastMessage] = useState<MessageType | null>(null);\r\n\r\n  const loadPreviousMessages = () => {\r\n    if (messages.length > 0) {\r\n      const newLastMessage = messages[0]; // 가장 오래된 메시지\r\n      fetchMessages(\r\n        (newMessages) => setMessages([...newMessages, ...messages]),\r\n        newLastMessage,\r\n      );\r\n      setLastMessage(newLastMessage);\r\n    }\r\n  };\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView();\r\n    }\r\n  };\r\n\r\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>) => {\r\n    const target = e.target as HTMLDivElement;\r\n    const bottom =\r\n      target.scrollHeight - target.scrollTop === target.clientHeight;\r\n    if (!bottom) {\r\n      setIsAtBottom(false);\r\n    }\r\n    if (target.scrollTop === 0) {\r\n      const oldScrollHeight = target.scrollHeight;\r\n\r\n      requestAnimationFrame(() => {\r\n        target.scrollTop = target.scrollHeight - oldScrollHeight;\r\n      });\r\n    }\r\n    if (!messagesWrapperRef.current) {\r\n      return;\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } =\r\n      messagesWrapperRef.current;\r\n    const atBottom = scrollHeight - (scrollTop + clientHeight) < 10;\r\n    setIsAtBottom(atBottom);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAtBottom) {\r\n      scrollToBottom();\r\n    }\r\n  }, [messages, isAtBottom]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = fetchMessages(setMessages);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const overlayStyles: ReactModal.Styles = {\r\n    overlay: {\r\n      zIndex: 2,\r\n      backgroundColor: 'rgba(0, 0, 0, 0)',\r\n      pointerEvents: 'none',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <styled.StyledModal isOpen={modalIsOpen} style={overlayStyles}>\r\n      <styled.ChatBoxHeader>\r\n        <styled.HeaderWrapper onClick={closeModal}>\r\n          <styled.CloseButton />\r\n          <styled.Title>Chat</styled.Title>\r\n        </styled.HeaderWrapper>\r\n\r\n        <styled.InfoWrapper onClick={updateNickname}>\r\n          <styled.Nickname>\r\n            {storedDisplayName ? storedDisplayName : 'unknown'}\r\n          </styled.Nickname>\r\n          <span>님</span>\r\n        </styled.InfoWrapper>\r\n      </styled.ChatBoxHeader>\r\n      <styled.MessagesWrapper onScroll={handleScroll} ref={messagesWrapperRef}>\r\n        <styled.ButtonWrapper>\r\n          <styled.Button onClick={loadPreviousMessages}>\r\n            <styled.Icon>\r\n              <AiFillMessage />\r\n            </styled.Icon>\r\n            이전 채팅 불러오기\r\n          </styled.Button>\r\n        </styled.ButtonWrapper>\r\n        {messages?.map((message) => (\r\n          <Message key={message.id} message={message} />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </styled.MessagesWrapper>\r\n      <styled.ScrollToBottomButton\r\n        onClick={scrollToBottom}\r\n        $isVisible={!isAtBottom}\r\n      >\r\n        <styled.BottomIcon />\r\n      </styled.ScrollToBottomButton>\r\n      <SendMessage />\r\n    </styled.StyledModal>\r\n  );\r\n};\r\n\r\nexport default memo(ChatBox);\r\n","import axios from 'axios';\r\nimport { Interval } from 'components/Widget/Widget.constants';\r\nimport { IWidgetTicker } from 'components/Widget/Widget.types';\r\n\r\nexport default async function getTickerWidgetData(\r\n  pairId: string,\r\n  interval: Interval,\r\n  type: 'current' | 'previous' = 'current',\r\n): Promise<IWidgetTicker> {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.investing.com/api/financialdata/${pairId}/historical/chart/?interval=${interval}&pointscount=60`,\r\n    );\r\n\r\n    const dataIndex =\r\n      type === 'current'\r\n        ? response.data.data.length - 1\r\n        : response.data.data.length - 2;\r\n    const item = response.data.data[dataIndex];\r\n    return {\r\n      time: item[0],\r\n      value: item[4],\r\n    };\r\n  } catch (error) {\r\n    console.error('An error occurred while fetching the data:', error);\r\n    throw error;\r\n  }\r\n}\r\n","import { useQuery, UseQueryResult } from 'react-query';\r\nimport { Interval } from 'components/Widget/Widget.constants';\r\nimport getTickerWidgetData from 'api/getTickerWidgetData';\r\nimport { IWidgetTicker } from 'components/Widget/Widget.types';\r\n\r\nconst setRefetchInterval = (interval: Interval): number | false => {\r\n  switch (interval) {\r\n    case 'PT1M':\r\n      return 60 * 1000;\r\n    case 'PT5M':\r\n      return 5 * 60 * 1000;\r\n    case 'P1D':\r\n      return 24 * 60 * 60 * 1000;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const useWidgetTickers = (\r\n  pairId: string,\r\n  interval: Interval,\r\n  type: 'current' | 'previous' = 'current',\r\n): UseQueryResult<IWidgetTicker, Error> => {\r\n  return useQuery(\r\n    [pairId, interval, type],\r\n    () => getTickerWidgetData(pairId, interval, type),\r\n    {\r\n      refetchInterval: setRefetchInterval(interval),\r\n    },\r\n  );\r\n};\r\n","export const PAIR_DATA = {\r\n  'S&P 500': { id: '1175153', intervals: ['PT1M', 'PT1H', 'P1D'] },\r\n  NASDAQ: { id: '1175151', intervals: ['PT1M', 'PT1H', 'P1D'] },\r\n  KOSPI: { id: '37426', intervals: ['PT5M', 'PT1H', 'P1D'] },\r\n  KOSDAQ: { id: '38016', intervals: ['PT1M', 'PT1H', 'P1D'] },\r\n  '금 선물': { id: '8830', intervals: ['PT1M', 'PT1H', 'P1D'] },\r\n  '원유 선물': { id: '8849', intervals: ['PT1M', 'PT1H', 'P1D'] },\r\n};\r\n\r\nexport const validInterval = ['PT1M', 'PT5M', 'PT1H', 'P1D'] as const;\r\nexport type Interval = (typeof validInterval)[number];\r\n","import axios from 'axios';\r\nimport { Interval } from 'components/Widget/Widget.constants';\r\nimport { IWidgetTicker } from 'components/Widget/Widget.types';\r\n\r\nexport default async function getChartWidgetData(\r\n  pairId: string,\r\n  interval: Interval,\r\n): Promise<IWidgetTicker[]> {\r\n  try {\r\n    const currentDate = new Date();\r\n    const prev9AM = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth(),\r\n      currentDate.getDate() - 1,\r\n      9,\r\n    );\r\n    const prev9AMTimestamp = prev9AM.getTime();\r\n\r\n    const response = await axios.get(\r\n      `https://api.investing.com/api/financialdata/${pairId}/historical/chart/?interval=${interval}&pointscount=60`,\r\n    );\r\n\r\n    const data: IWidgetTicker[] = response.data.data.map((item: any) => ({\r\n      time: item[0],\r\n      value: item[4], // 종가\r\n    }));\r\n\r\n    let filteredData = data.filter((item) => item.time >= prev9AMTimestamp); // 전일 9시 데이터부터\r\n    if (filteredData.length === 0) {\r\n      filteredData = data.slice(-25);\r\n    }\r\n    return filteredData;\r\n  } catch (error) {\r\n    console.error('An error occurred while fetching the data:', error);\r\n    throw error;\r\n  }\r\n}\r\n","import { useQuery } from 'react-query';\r\nimport { Interval } from 'components/Widget/Widget.constants';\r\nimport getChartWidgetData from 'api/getChartWidgetData';\r\n\r\nconst useChartTickers = (pairId: string, interval: Interval) => {\r\n  return useQuery(\r\n    [pairId, interval],\r\n    () => getChartWidgetData(pairId, interval),\r\n    {\r\n      refetchInterval: 60 * 60 * 1000,\r\n    },\r\n  );\r\n};\r\n\r\nexport default useChartTickers;\r\n","import { createChart, ColorType, UTCTimestamp } from 'lightweight-charts';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport useChartTickers from 'hooks/useChartTickers';\r\nimport { IWidgetTicker } from './Widget.types';\r\n\r\ninterface IWidgetTickerProps {\r\n  pairId: string;\r\n  baseData?: IWidgetTicker;\r\n}\r\n\r\nexport const ChartWidget: React.FC<IWidgetTickerProps> = ({\r\n  pairId,\r\n  baseData,\r\n}) => {\r\n  const chartContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const { data, isLoading } = useChartTickers(pairId, 'PT1H');\r\n\r\n  useEffect(() => {\r\n    if (!chartContainerRef.current || !data || data.length === 0) return;\r\n    const baselineValue = baseData?.value;\r\n\r\n    const handleResize = () => {\r\n      chart.applyOptions({ width: chartContainerRef.current?.clientWidth });\r\n    };\r\n    const chart = createChart(chartContainerRef.current as HTMLElement, {\r\n      layout: {\r\n        background: { type: ColorType.Solid, color: 'transparent' },\r\n      },\r\n      width: 72,\r\n      height: 44,\r\n      timeScale: {\r\n        visible: false,\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          visible: false,\r\n        },\r\n        horzLines: {\r\n          visible: false,\r\n        },\r\n      },\r\n      rightPriceScale: {\r\n        visible: false,\r\n      },\r\n      handleScroll: {\r\n        mouseWheel: false,\r\n        pressedMouseMove: false,\r\n      },\r\n      handleScale: {\r\n        mouseWheel: false,\r\n        pinch: false,\r\n        axisPressedMouseMove: {\r\n          time: false,\r\n          price: false,\r\n        },\r\n      },\r\n      crosshair: {\r\n        vertLine: {\r\n          visible: false,\r\n        },\r\n        horzLine: {\r\n          visible: false,\r\n        },\r\n      },\r\n    });\r\n\r\n    const newSeries = chart.addBaselineSeries({\r\n      baseValue: { type: 'price', price: baselineValue },\r\n      lineWidth: 1,\r\n      topLineColor: 'rgb( 239, 83, 80)',\r\n      topFillColor1: 'rgba( 239, 83, 80, 0.03)',\r\n      topFillColor2: 'rgba( 239, 83, 80, 0.4)',\r\n      bottomLineColor: 'rgb(42,127,255)',\r\n      bottomFillColor1: 'rgba( 42,127,255, 0.03)',\r\n      bottomFillColor2: 'rgba(42,127,255,0.4)',\r\n      crosshairMarkerVisible: false,\r\n      priceLineVisible: false,\r\n    });\r\n\r\n    const convertedData = data.map((item) => ({\r\n      time: item.time as UTCTimestamp,\r\n      value: item.value,\r\n    }));\r\n\r\n    newSeries.setData(convertedData);\r\n\r\n    const lineSeries = chart.addLineSeries({\r\n      color: '#B2B5BE',\r\n      priceLineVisible: false,\r\n      lineWidth: 1,\r\n      lineStyle: 2,\r\n      crosshairMarkerVisible: false,\r\n    });\r\n\r\n    const lineData = data.map((item) => ({\r\n      time: item.time as UTCTimestamp,\r\n      value: baselineValue,\r\n    }));\r\n\r\n    chart.timeScale().fitContent();\r\n    lineSeries.setData(lineData);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n\r\n      chart.remove();\r\n    };\r\n  }, [data]);\r\n\r\n  if (isLoading) return <>로딩중...</>;\r\n  if (!data) return <>데이터 없음</>;\r\n\r\n  return <div ref={chartContainerRef} />;\r\n};\r\n","const getFormattedValues = (current: number, prev: number) => {\r\n  const diff = current - prev;\r\n  const percent = (diff / prev) * 100;\r\n\r\n  const formattedDiff =\r\n    diff >= 0 ? `+${diff.toFixed(2)}` : `-${Math.abs(diff).toFixed(2)}`;\r\n\r\n  return {\r\n    diff: formattedDiff,\r\n    percent: Math.abs(percent).toFixed(2),\r\n  };\r\n};\r\n\r\nexport default getFormattedValues;\r\n","const formatNumber = (value: number): string => {\r\n  return new Intl.NumberFormat().format(value);\r\n};\r\n\r\nexport default formatNumber;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  width: ${({ theme }) => theme.sizes.lg};\r\n  overflow: hidden;\r\n  scroll-behavior: smooth;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 1rem 0.3rem;\r\n  font-family: 'Pretendard', sans-serif;\r\n`;\r\n\r\ninterface ButtonProps {\r\n  $visible: boolean;\r\n}\r\n\r\nconst Button = styled.button<ButtonProps>`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%) scale(${(props) => (props.$visible ? 1 : 0.7)});\r\n  transition:\r\n    opacity 0.5s cubic-bezier(0.5, -0.75, 0.7, 2),\r\n    transform 0.6s cubic-bezier(0.5, -0.75, 0.7, 2);\r\n  opacity: ${(props) => (props.$visible ? 1 : 0)};\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0px;\r\n  min-width: 0px;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.primary1};\r\n  z-index: 2;\r\n`;\r\n\r\nexport const PrevButton = styled(Button)`\r\n  left: 8px;\r\n`;\r\n\r\nexport const NextButton = styled(Button)`\r\n  left: auto;\r\n  right: 8px;\r\n`;\r\n\r\nexport const Icon = styled.span`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: 1.5rem;\r\n  line-height: 0.5;\r\n`;\r\n\r\nexport const SliderContainer = styled.div`\r\n  display: flex;\r\n  transition: transform 0.4s cubic-bezier(0.51, 0.92, 0.24, 1.15);\r\n  gap: 0.6rem;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Shade = styled.div<ButtonProps>`\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  width: 140px;\r\n  transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const LeftShade = styled(Shade)`\r\n  opacity: ${(props) => (props.$visible ? 1 : 0)};\r\n  left: 0px;\r\n  background-image: linear-gradient(\r\n    90deg,\r\n    ${({ theme }) => theme.colors.bg_page} 10%,\r\n    transparent\r\n  );\r\n`;\r\n\r\nexport const RightShade = styled(Shade)`\r\n  opacity: ${(props) => (props.$visible ? 1 : 0)};\r\n  right: 0px;\r\n  background-image: linear-gradient(\r\n    270deg,\r\n    ${({ theme }) => theme.colors.bg_page} 10%,\r\n    transparent\r\n  );\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.bg_element4};\r\n  display: flex;\r\n  padding: 1rem 1.1rem;\r\n  gap: 1.5rem;\r\n  border: 1px solid ${({ theme }) => theme.colors.border1};\r\n  border-radius: 12px;\r\n  box-shadow: ${({ theme }) => theme.colors.alpha1} 0px 2px 10px 0px;\r\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.alpha1};\r\n  }\r\n`;\r\n\r\nexport const TickerRow = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 0.7rem;\r\n`;\r\n\r\nexport const ChartRow = styled(TickerRow)`\r\n  flex: auto;\r\n`;\r\n\r\nexport const Ticker = styled.div`\r\n  font-size: 0.75rem;\r\n  color: ${({ theme }) => theme.colors.heading2};\r\n`;\r\n\r\nexport const Price = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.4rem;\r\n`;\r\n\r\ntype PriceChangeProps = {\r\n  $isIncrease?: boolean;\r\n  $isDecrease?: boolean;\r\n  $highlight?: 'increase' | 'decrease' | null;\r\n};\r\n\r\nexport const Nowprice = styled.span<PriceChangeProps>`\r\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  background-color: ${(props) =>\r\n    props.$highlight === 'increase'\r\n      ? props.theme.colors.alpha_red\r\n      : props.$highlight === 'decrease'\r\n      ? props.theme.colors.alpha_blue\r\n      : 'transparent'};\r\n`;\r\n\r\nexport const DiffPrice = styled.span<PriceChangeProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.4rem;\r\n  font-size: 0.8rem;\r\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  color: ${(props) =>\r\n    props.$isIncrease\r\n      ? props.theme.colors.red\r\n      : props.$isDecrease\r\n      ? props.theme.colors.blue\r\n      : props.theme.colors.heading1};\r\n`;\r\n\r\nexport const Perc = styled.span`\r\n  gap: 0.1rem;\r\n  display: flex;\r\n`;\r\n\r\nexport const Change = styled.span`\r\n  font-size: 0.65rem;\r\n`;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useWidgetTickers } from 'hooks/useWidgetTickers';\r\nimport { PAIR_DATA, Interval } from 'components/Widget/Widget.constants';\r\nimport getFormattedValues from 'utils/getFormattedValues';\r\nimport formatNumber from 'utils/formatNumber';\r\nimport { IWidgetTicker } from './Widget.types';\r\nimport * as styled from './Widget.styles';\r\nimport { FaCaretUp, FaCaretDown } from 'react-icons/fa';\r\n\r\ninterface IWidgetTickerProps {\r\n  pairId: string;\r\n  baseData?: IWidgetTicker;\r\n}\r\n\r\nexport const TickerWidget: React.FC<IWidgetTickerProps> = ({\r\n  pairId,\r\n  baseData,\r\n}) => {\r\n  const validInterval =\r\n    Object.values(PAIR_DATA).find((p) => p.id === pairId)?.intervals || [];\r\n  const currentInterval: Interval = validInterval.includes('PT1M')\r\n    ? 'PT1M'\r\n    : 'PT5M';\r\n  const {\r\n    data: currentData,\r\n    isLoading,\r\n    error,\r\n  } = useWidgetTickers(pairId, currentInterval, 'current');\r\n\r\n  const prevData = useRef<IWidgetTicker | null>(currentData!);\r\n\r\n  const [highlight, setHighlight] = useState<'increase' | 'decrease' | null>(\r\n    null,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentData) {\r\n      prevData.current = currentData;\r\n    }\r\n  }, [currentData]);\r\n\r\n  useEffect(() => {\r\n    if (changeRateCurrent === 'increase' || changeRateCurrent === 'decrease') {\r\n      setHighlight(changeRateCurrent);\r\n      const timer = setTimeout(() => {\r\n        setHighlight(null);\r\n      }, 150);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentData]);\r\n\r\n  const getChangeRate = (\r\n    currentData?: IWidgetTicker | null,\r\n    prevData?: IWidgetTicker | null,\r\n  ): 'increase' | 'decrease' | '' => {\r\n    if (!currentData || !prevData) return '';\r\n    if (currentData.value > prevData.value) return 'increase';\r\n    if (currentData.value < prevData.value) return 'decrease';\r\n    // console.log('currentData.value:', currentData.value);\r\n    // console.log('prevData.value:', prevData.value);\r\n    return '';\r\n  };\r\n\r\n  const changeRateCurrent = getChangeRate(currentData, prevData.current);\r\n  const changeRatePrev = getChangeRate(currentData, baseData);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  if (!currentData || !baseData) return null;\r\n\r\n  const { diff, percent } = getFormattedValues(\r\n    currentData.value,\r\n    baseData.value,\r\n  );\r\n\r\n  return (\r\n    <styled.Price>\r\n      <styled.Nowprice $highlight={highlight}>\r\n        {formatNumber(parseFloat(currentData.value.toFixed(2)))}\r\n      </styled.Nowprice>\r\n      <styled.DiffPrice\r\n        $isIncrease={changeRatePrev === 'increase'}\r\n        $isDecrease={changeRatePrev === 'decrease'}\r\n      >\r\n        <styled.Perc>\r\n          {changeRatePrev === 'increase' ? <FaCaretUp /> : <FaCaretDown />}{' '}\r\n          {percent}%{' '}\r\n        </styled.Perc>\r\n        <styled.Change>{diff}</styled.Change>\r\n      </styled.DiffPrice>\r\n    </styled.Price>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\r\nimport * as styled from './Widget.styles';\r\n\r\ninterface CarouselProps {\r\n  children: React.ReactNode[];\r\n  slidesToShow: number;\r\n}\r\n\r\nexport const Carousel: React.FC<CarouselProps> = ({\r\n  children,\r\n  slidesToShow,\r\n}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const totalSlides = React.Children.count(children);\r\n  const maxIndex = totalSlides - slidesToShow - 1;\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentIndex > 0) setCurrentIndex((prev) => Math.max(prev - 1, 0));\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (currentIndex < maxIndex)\r\n      setCurrentIndex((prev) => Math.min(prev + 1, maxIndex));\r\n  };\r\n\r\n  return (\r\n    <styled.Container>\r\n      <styled.PrevButton onClick={handlePrevClick} $visible={currentIndex > 0}>\r\n        <styled.Icon>\r\n          <FiChevronLeft />\r\n        </styled.Icon>\r\n      </styled.PrevButton>\r\n      <styled.LeftShade $visible={currentIndex > 0} />\r\n      <styled.SliderContainer\r\n        style={{\r\n          transform: `translateX(-${(100 / slidesToShow) * currentIndex}%)`,\r\n        }}\r\n      >\r\n        {children}\r\n      </styled.SliderContainer>\r\n      <styled.RightShade $visible={currentIndex < maxIndex} />\r\n      <styled.NextButton\r\n        onClick={handleNextClick}\r\n        $visible={currentIndex < maxIndex}\r\n      >\r\n        <styled.Icon>\r\n          <FiChevronRight />\r\n        </styled.Icon>\r\n      </styled.NextButton>\r\n    </styled.Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useWidgetTickers } from 'hooks/useWidgetTickers';\r\nimport { PAIR_DATA } from './Widget.constants';\r\nimport { ChartWidget } from './ChartWidget';\r\nimport { TickerWidget } from './TickerWidget';\r\nimport { Carousel } from './Carousel';\r\nimport * as styled from './Widget.styles';\r\n\r\nexport const Widget: React.FC = () => {\r\n  return (\r\n    <Carousel slidesToShow={4}>\r\n      {Object.entries(PAIR_DATA).map(([key, { id }]) => {\r\n        const { data: baseData } = useWidgetTickers(id, 'P1D', 'previous');\r\n        if (!baseData) return null;\r\n        return (\r\n          <styled.Card key={key}>\r\n            <styled.TickerRow>\r\n              <styled.Ticker>{key}</styled.Ticker>\r\n              <TickerWidget pairId={id} baseData={baseData} />\r\n            </styled.TickerRow>\r\n            <styled.ChartRow>\r\n              <ChartWidget pairId={id} baseData={baseData} />\r\n            </styled.ChartRow>\r\n          </styled.Card>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface RateProps {\r\n  $isPositive: boolean;\r\n}\r\n\r\nexport const HeaderContainer = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 3;\r\n`;\r\n\r\nexport const Inner = styled.div`\r\n  width: ${({ theme }) => theme.sizes.lg};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  gap: 0.75rem;\r\n`;\r\n\r\nexport const InnerSpaceBetween = styled(Inner)`\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Topbar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.8vh;\r\n  gap: 0.75rem;\r\n  font-size: 0.74rem;\r\n  font-weight: 600;\r\n  letter-spacing: -0.3px;\r\n  color: ${({ theme }) => theme.colors.text1};\r\n  background-color: ${({ theme }) => theme.colors.bg_element5};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border1};\r\n  transition: all 0.15s ease-out 0s;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-weight: 500;\r\n  margin-right: 6px;\r\n  color: ${({ theme }) => theme.colors.text2};\r\n`;\r\n\r\nexport const Rate = styled.span<RateProps>`\r\n  font-weight: 500;\r\n  font-size: 0.7rem;\r\n  margin-left: 3px;\r\n  color: ${(props) =>\r\n    props.$isPositive ? props.theme.colors.red : props.theme.colors.blue};\r\n`;\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 7.5vh;\r\n  background-color: ${({ theme }) => theme.colors.alpha3};\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  box-shadow: ${({ theme }) => theme.colors.alpha2} 0px 5px 10px 0px;\r\n  transition: all 0.15s ease-out 0s;\r\n`;\r\n\r\nexport const Logo = styled.a`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const BtnGroup = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const GithubButton = styled.button`\r\n  width: 40px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.icon};\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const SwitchButton = styled.button<{ $isDarkMode: boolean }>`\r\n  width: 40px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.icon};\r\n  font-size: ${({ $isDarkMode }) => ($isDarkMode ? '1.1rem' : '1.3rem')};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport default async function getGlobalCoinData() {\r\n  try {\r\n    const cachedData = sessionStorage.getItem('globalCoinData');\r\n\r\n    if (cachedData) {\r\n      return JSON.parse(cachedData);\r\n    } else {\r\n      const response = await axios.get('https://api.coinlore.net/api/global/');\r\n      const data = await response.data;\r\n\r\n      sessionStorage.setItem('globalCoinData', JSON.stringify(data));\r\n\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.error('An error occurred while fetching the data:', error);\r\n  }\r\n}\r\n","import { atom } from 'recoil';\r\n\r\nexport type GlobalCoinType = {\r\n  coins_count: number;\r\n  active_markets: number;\r\n  total_mcap: number;\r\n  total_volume: number;\r\n  btc_d: number;\r\n  mcap_change: number;\r\n  volume_change: number;\r\n};\r\n\r\nexport const globalCoinState = atom<GlobalCoinType[]>({\r\n  key: 'globalCoinState',\r\n  default: [],\r\n});\r\n","import { useCallback, useLayoutEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { themeState } from 'recoil/atoms/theme';\r\n\r\nfunction useTheme() {\r\n  const [theme, setTheme] = useRecoilState(themeState);\r\n\r\n  const onChangeTheme = useCallback(() => {\r\n    const updatedTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(updatedTheme);\r\n    localStorage.setItem('theme', updatedTheme);\r\n  }, [theme]);\r\n\r\n  useLayoutEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme && ['dark', 'light'].includes(savedTheme)) {\r\n      setTheme(savedTheme);\r\n      return;\r\n    }\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches\r\n    ) {\r\n      setTheme('dark');\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    theme,\r\n    onChangeTheme,\r\n  };\r\n}\r\n\r\nexport default useTheme;\r\n","var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogoDark(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 136,\n    height: 46,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4062FF\",\n    d: \"M30.7894 8.25002A16.50008 16.50008 0 0 0 8.25 14.2894a16.50035 16.50035 0 0 0-2.21058 8.25c0 2.8964.7624 5.7417 2.21058 8.25a16.49986 16.49986 0 0 0 6.0394 6.0395 16.50055 16.50055 0 0 0 16.5 0l-2.6609-4.6088a11.17808 11.17808 0 0 1-11.1782 0 11.17783 11.17783 0 0 1-4.0915-4.0916 11.17808 11.17808 0 0 1 0-11.1782 11.17831 11.17831 0 0 1 4.0915-4.0915 11.17808 11.17808 0 0 1 11.1782 0l2.6609-4.60878Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M13.936 22.6c0-4.68 3.528-8.664 9.216-8.664 2.616 0 4.32.84 6.024 2.112L27.64 18.88c-1.224-.936-2.544-1.632-4.464-1.632-3.408 0-5.472 2.376-5.472 5.352 0 2.976 2.064 5.352 5.472 5.352 1.92 0 3.24-.696 4.464-1.632l1.536 2.832c-1.704 1.272-3.408 2.112-6.024 2.112-5.688 0-9.216-3.984-9.216-8.664Zm20.7441-3.912v2.688c.384-2.232 2.328-2.952 3.384-2.952.408 0 .528.024.912.096v3.528c-.504-.12-1.152-.168-1.512-.168-1.344 0-2.688.792-2.688 2.424V31h-3.576V18.688h3.48Zm11.8408 7.704 2.928-7.704h3.936l-7.968 17.928h-3.6l2.808-6.648-5.064-11.28h4.032l2.928 7.704Zm18.4494-1.512c0-1.992-1.176-3.552-3.168-3.552-1.752 0-3.216 1.152-3.216 3.36 0 2.304 1.368 3.672 3.312 3.672 1.968 0 3.072-1.584 3.072-3.48Zm-6.288 11.736h-3.576V18.688h3.576v1.8c.888-1.272 2.04-2.064 3.864-2.064 3.744 0 6 2.88 6 6.48 0 3.456-2.088 6.36-5.928 6.36-1.656 0-3.096-.816-3.936-1.944v7.296Zm16.4494-20.952v3.024h3.408v2.808h-3.408v5.76c0 .552.216 1.08.912 1.08.696 0 .936-.576.936-1.152 0-.36-.096-.864-.168-1.056h2.832c.216.456.288 1.008.288 1.464 0 1.824-1.2 3.672-4.104 3.672-2.184 0-4.272-.792-4.272-4.344v-5.424h-1.848v-2.808h2.112l.552-3.024h2.76Zm5.8082 9.168c0-3.84 3.192-6.408 6.768-6.408 3.576 0 6.768 2.592 6.768 6.408 0 3.84-3.192 6.432-6.768 6.432-3.576 0-6.768-2.568-6.768-6.432Zm3.48 0c0 1.944 1.536 3.36 3.288 3.36 1.8 0 3.288-1.44 3.288-3.36 0-1.896-1.488-3.336-3.288-3.336-1.752 0-3.288 1.416-3.288 3.336Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#406AFF\",\n    d: \"M109.45 18.784c0 1.44-.912 2.856-2.736 3.504 2.016.384 3.504 2.256 3.504 3.984 0 2.856-2.4 4.728-5.952 4.728h-7.0318V14.176l6.3118.024c3.384 0 5.904 1.728 5.904 4.584Zm-6.552 5.064h-1.944v4.2h3.312c1.248 0 2.184-.72 2.184-1.848 0-1.152-.456-2.352-3.552-2.352Zm-1.944-2.592h1.536c2.616 0 3.192-1.2 3.192-2.304 0-1.224-1.008-1.8-2.136-1.8h-2.592v4.104Zm15.195-2.568v2.688c.384-2.232 2.328-2.952 3.384-2.952.408 0 .528.024.912.096v3.528c-.504-.12-1.152-.168-1.512-.168-1.344 0-2.688.792-2.688 2.424V31h-3.576V18.688h3.48Zm5.244 6.144c0-3.84 3.192-6.408 6.768-6.408 3.576 0 6.768 2.592 6.768 6.408 0 3.84-3.192 6.432-6.768 6.432-3.576 0-6.768-2.568-6.768-6.432Zm3.48 0c0 1.944 1.536 3.36 3.288 3.36 1.8 0 3.288-1.44 3.288-3.36 0-1.896-1.488-3.336-3.288-3.336-1.752 0-3.288 1.416-3.288 3.336Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoDark);\nexport default __webpack_public_path__ + \"static/media/Logo-Dark.e8aed88de3651d256985e6496a74bb54.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogoLight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 136,\n    height: 46,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4062FF\",\n    d: \"M30.7894 8.25002A16.50008 16.50008 0 0 0 8.25 14.2894a16.50035 16.50035 0 0 0-2.21058 8.25c0 2.8964.7624 5.7417 2.21058 8.25a16.49986 16.49986 0 0 0 6.0394 6.0395 16.50055 16.50055 0 0 0 16.5 0l-2.6609-4.6088a11.17808 11.17808 0 0 1-11.1782 0 11.17783 11.17783 0 0 1-4.0915-4.0916 11.17808 11.17808 0 0 1 0-11.1782 11.17831 11.17831 0 0 1 4.0915-4.0915 11.17808 11.17808 0 0 1 11.1782 0l2.6609-4.60878Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000\",\n    d: \"M13.936 22.6c0-4.68 3.528-8.664 9.216-8.664 2.616 0 4.32.84 6.024 2.112L27.64 18.88c-1.224-.936-2.544-1.632-4.464-1.632-3.408 0-5.472 2.376-5.472 5.352 0 2.976 2.064 5.352 5.472 5.352 1.92 0 3.24-.696 4.464-1.632l1.536 2.832c-1.704 1.272-3.408 2.112-6.024 2.112-5.688 0-9.216-3.984-9.216-8.664Zm20.7441-3.912v2.688c.384-2.232 2.328-2.952 3.384-2.952.408 0 .528.024.912.096v3.528c-.504-.12-1.152-.168-1.512-.168-1.344 0-2.688.792-2.688 2.424V31h-3.576V18.688h3.48Zm11.8408 7.704 2.928-7.704h3.936l-7.968 17.928h-3.6l2.808-6.648-5.064-11.28h4.032l2.928 7.704Zm18.4494-1.512c0-1.992-1.176-3.552-3.168-3.552-1.752 0-3.216 1.152-3.216 3.36 0 2.304 1.368 3.672 3.312 3.672 1.968 0 3.072-1.584 3.072-3.48Zm-6.288 11.736h-3.576V18.688h3.576v1.8c.888-1.272 2.04-2.064 3.864-2.064 3.744 0 6 2.88 6 6.48 0 3.456-2.088 6.36-5.928 6.36-1.656 0-3.096-.816-3.936-1.944v7.296Zm16.4494-20.952v3.024h3.408v2.808h-3.408v5.76c0 .552.216 1.08.912 1.08.696 0 .936-.576.936-1.152 0-.36-.096-.864-.168-1.056h2.832c.216.456.288 1.008.288 1.464 0 1.824-1.2 3.672-4.104 3.672-2.184 0-4.272-.792-4.272-4.344v-5.424h-1.848v-2.808h2.112l.552-3.024h2.76Zm5.8082 9.168c0-3.84 3.192-6.408 6.768-6.408 3.576 0 6.768 2.592 6.768 6.408 0 3.84-3.192 6.432-6.768 6.432-3.576 0-6.768-2.568-6.768-6.432Zm3.48 0c0 1.944 1.536 3.36 3.288 3.36 1.8 0 3.288-1.44 3.288-3.36 0-1.896-1.488-3.336-3.288-3.336-1.752 0-3.288 1.416-3.288 3.336Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4062FF\",\n    d: \"M109.45 18.784c0 1.44-.912 2.856-2.736 3.504 2.016.384 3.504 2.256 3.504 3.984 0 2.856-2.4 4.728-5.952 4.728h-7.0318V14.176l6.3118.024c3.384 0 5.904 1.728 5.904 4.584Zm-6.552 5.064h-1.944v4.2h3.312c1.248 0 2.184-.72 2.184-1.848 0-1.152-.456-2.352-3.552-2.352Zm-1.944-2.592h1.536c2.616 0 3.192-1.2 3.192-2.304 0-1.224-1.008-1.8-2.136-1.8h-2.592v4.104Zm15.195-2.568v2.688c.384-2.232 2.328-2.952 3.384-2.952.408 0 .528.024.912.096v3.528c-.504-.12-1.152-.168-1.512-.168-1.344 0-2.688.792-2.688 2.424V31h-3.576V18.688h3.48Zm5.244 6.144c0-3.84 3.192-6.408 6.768-6.408 3.576 0 6.768 2.592 6.768 6.408 0 3.84-3.192 6.432-6.768 6.432-3.576 0-6.768-2.568-6.768-6.432Zm3.48 0c0 1.944 1.536 3.36 3.288 3.36 1.8 0 3.288-1.44 3.288-3.36 0-1.896-1.488-3.336-3.288-3.336-1.752 0-3.288 1.416-3.288 3.336Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoLight);\nexport default __webpack_public_path__ + \"static/media/Logo-Light.0533c45e426bb3ea8d8dad4be474a5cb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\r\nimport * as styled from './Header.styles';\r\nimport getGlobalCoinData from 'api/getGlobalCoinData';\r\nimport { useRecoilState } from 'recoil';\r\nimport { globalCoinState } from 'recoil/atoms/globalCoin';\r\nimport useFetchExchangeRate from 'hooks/binance/useFetchExchangeRate';\r\nimport useTheme from 'hooks/useTheme';\r\nimport { HiSun, HiMoon } from 'react-icons/hi2';\r\nimport { DiGithubAlt } from 'react-icons/di';\r\nimport LogoDark from 'assets/images/Logo-Dark.svg';\r\nimport LogoLight from 'assets/images/Logo-Light.svg';\r\n\r\nfunction Header() {\r\n  const { theme, onChangeTheme } = useTheme();\r\n  const [globalCoin, setGlobalCoin] = useRecoilState(globalCoinState);\r\n  const { exchangeRate } = useFetchExchangeRate();\r\n\r\n  const isDarkMode = theme === 'dark';\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getGlobalCoinData();\r\n        setGlobalCoin(data);\r\n      } catch (error) {\r\n        console.error('Error fetching global coin data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const multiplyByExchangeRate = (value: number) => {\r\n    return exchangeRate ? value * exchangeRate : 0;\r\n  };\r\n  const formatCurrency = (value: number) => {\r\n    if (value === null || value === undefined) {\r\n      return '로딩 중...';\r\n    }\r\n\r\n    const trillion = Math.floor(value / 1e12);\r\n    const billion = Math.floor((value % 1e12) / 1e8);\r\n\r\n    if (trillion > 0) {\r\n      return `${trillion}조 ${billion}억`;\r\n    } else {\r\n      return `${billion}억`;\r\n    }\r\n  };\r\n  return (\r\n    <styled.HeaderContainer>\r\n      <styled.Topbar>\r\n        <styled.Inner>\r\n          <div>환율(USD/KRW): {exchangeRate || null}</div>\r\n          {globalCoin && (\r\n            <>\r\n              <div>\r\n                <styled.Label>암호화폐</styled.Label>\r\n                {globalCoin[0]?.coins_count\r\n                  ? globalCoin[0].coins_count.toString()\r\n                  : '로딩 중...'}\r\n              </div>\r\n              <div>\r\n                <styled.Label>거래소</styled.Label>\r\n                {globalCoin[0]?.active_markets\r\n                  ? globalCoin[0].active_markets.toString()\r\n                  : '로딩 중...'}\r\n              </div>\r\n              <div>\r\n                <styled.Label>시가총액</styled.Label>\r\n                {globalCoin[0]?.total_mcap\r\n                  ? formatCurrency(\r\n                      multiplyByExchangeRate(globalCoin[0].total_mcap),\r\n                    )\r\n                  : '로딩 중...'}\r\n                <styled.Rate $isPositive={globalCoin[0]?.mcap_change >= 0}>\r\n                  {globalCoin[0]?.mcap_change !== undefined\r\n                    ? (globalCoin[0].mcap_change >= 0 ? '+' : '-') +\r\n                      Math.abs(globalCoin[0].mcap_change).toString() +\r\n                      '%'\r\n                    : '로딩 중...'}\r\n                </styled.Rate>\r\n              </div>\r\n              <div>\r\n                <styled.Label>24시간 거래량</styled.Label>\r\n                {globalCoin[0]?.total_volume\r\n                  ? formatCurrency(\r\n                      multiplyByExchangeRate(globalCoin[0].total_volume),\r\n                    )\r\n                  : '로딩 중...'}\r\n                <styled.Rate $isPositive={globalCoin[0]?.volume_change >= 0}>\r\n                  {globalCoin[0]?.volume_change !== undefined\r\n                    ? (globalCoin[0].volume_change >= 0 ? '+' : '-') +\r\n                      Math.abs(globalCoin[0].volume_change).toString() +\r\n                      '%'\r\n                    : '로딩 중...'}\r\n                </styled.Rate>\r\n              </div>\r\n              <div>\r\n                <styled.Label>BTC 점유율</styled.Label>\r\n                {globalCoin[0]?.btc_d\r\n                  ? `${globalCoin[0].btc_d}%`\r\n                  : '로딩 중...'}\r\n              </div>\r\n            </>\r\n          )}\r\n        </styled.Inner>\r\n      </styled.Topbar>\r\n      <styled.HeaderWrapper>\r\n        <styled.InnerSpaceBetween>\r\n          <styled.Logo href=\"/Final-Project\">\r\n            <img\r\n              src={isDarkMode ? LogoDark : LogoLight}\r\n              alt=\"logo\"\r\n              loading=\"lazy\"\r\n            />\r\n          </styled.Logo>\r\n          <styled.BtnGroup>\r\n            <a\r\n              href=\"https://github.com/Hell-Study/Final-Project\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <styled.GithubButton>\r\n                <DiGithubAlt />\r\n              </styled.GithubButton>\r\n            </a>\r\n            <styled.SwitchButton\r\n              $isDarkMode={isDarkMode}\r\n              onClick={onChangeTheme}\r\n            >\r\n              {isDarkMode ? <HiMoon /> : <HiSun />}\r\n            </styled.SwitchButton>\r\n          </styled.BtnGroup>\r\n        </styled.InnerSpaceBetween>\r\n      </styled.HeaderWrapper>\r\n    </styled.HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useEffect, useRef } from 'react';\r\nimport {\r\n  CandlestickData,\r\n  createChart,\r\n  CrosshairMode,\r\n  IChartApi,\r\n  ISeriesApi,\r\n} from 'lightweight-charts';\r\nimport * as styled from '../ChartRight/ChartRight.styles';\r\nimport { selectedBithumbCoinInfoState } from 'recoil/atoms/bithumb';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { changes, changesRatio } from 'utils/priceCalc';\r\nimport useMatchCoingecko from 'hooks/bithumb/useMatchCoingecko';\r\nimport { IBithumbTicker } from './Bithumb.type';\r\n\r\ninterface IProps {\r\n  processedData: CandlestickData[];\r\n  updatedCandle: CandlestickData;\r\n}\r\n\r\nexport default function ChartComponent({\r\n  processedData,\r\n  updatedCandle,\r\n}: IProps) {\r\n  const backgroundColor = 'white';\r\n  const textColor = 'black';\r\n  const chartContainerRef = useRef<HTMLDivElement>(null);\r\n  const chart = useRef<IChartApi>();\r\n  const newSeries = useRef<ISeriesApi<'Candlestick'>>();\r\n  useEffect(() => {\r\n    if (processedData.length > 0) {\r\n      chart.current = createChart(chartContainerRef.current as HTMLElement, {\r\n        layout: {\r\n          background: {\r\n            color: backgroundColor,\r\n          },\r\n          textColor,\r\n        },\r\n        width: chartContainerRef.current?.clientWidth,\r\n        height: 300,\r\n        crosshair: {\r\n          mode: CrosshairMode.Normal,\r\n        },\r\n        leftPriceScale: {\r\n          borderVisible: false,\r\n        },\r\n        rightPriceScale: {\r\n          borderVisible: false,\r\n          scaleMargins: {\r\n            top: 0.1,\r\n            bottom: 0.1,\r\n          },\r\n        },\r\n        timeScale: {\r\n          borderVisible: false,\r\n        },\r\n      });\r\n      chart.current.timeScale().fitContent();\r\n      newSeries.current = chart.current.addCandlestickSeries({\r\n        upColor: '#D24F45',\r\n        wickUpColor: '#D24F45',\r\n        downColor: '#1261C4',\r\n        wickDownColor: '#1261C4',\r\n        borderVisible: false,\r\n      });\r\n\r\n      newSeries.current?.setData(processedData);\r\n\r\n      return () => {\r\n        chart.current?.remove();\r\n      };\r\n    }\r\n  }, [processedData]);\r\n\r\n  useEffect(() => {\r\n    if (updatedCandle && newSeries.current) {\r\n      newSeries.current.update(updatedCandle);\r\n    }\r\n  }, [updatedCandle]);\r\n\r\n  const selectedBithumbCoinInfo = useRecoilValue(selectedBithumbCoinInfoState);\r\n  const { thumb, coinName } = useMatchCoingecko(\r\n    (selectedBithumbCoinInfo as IBithumbTicker).symbol,\r\n  );\r\n\r\n  return (\r\n    <styled.ChartContainer>\r\n      {selectedBithumbCoinInfo !== null && (\r\n        <styled.CoinInfoContainer>\r\n          <styled.CoinImgWrapper>\r\n            <img\r\n              alt={`${selectedBithumbCoinInfo.symbol} 아이콘`}\r\n              width=\"45\"\r\n              height=\"45px\"\r\n              decoding=\"async\"\r\n              data-nimg=\"1\"\r\n              className=\"rounded-full\"\r\n              src={thumb}\r\n            />\r\n          </styled.CoinImgWrapper>\r\n          <styled.CoinInfo>\r\n            <styled.CoinIdentity>\r\n              <styled.CoinName>{coinName}</styled.CoinName>\r\n              <styled.CoinSymbol>\r\n                /{selectedBithumbCoinInfo.symbol}\r\n              </styled.CoinSymbol>\r\n            </styled.CoinIdentity>\r\n\r\n            <styled.CoinPrice\r\n              $isPositive={\r\n                Number(selectedBithumbCoinInfo?.closing_price) > 0\r\n                  ? 'true'\r\n                  : 'false'\r\n              }\r\n            >\r\n              {Number(selectedBithumbCoinInfo?.closing_price).toLocaleString(\r\n                'ko-KR',\r\n              )}{' '}\r\n              <span style={{ fontSize: '0.9rem' }}>KRW</span>\r\n            </styled.CoinPrice>\r\n          </styled.CoinInfo>\r\n\r\n          <styled.CoinChangeWrapper\r\n            $isPositive={\r\n              changesRatio(selectedBithumbCoinInfo) > 0 ? 'true' : 'false'\r\n            }\r\n          >\r\n            <styled.CoinChangeRate>\r\n              <span>전일대비</span>\r\n              {changesRatio(selectedBithumbCoinInfo) > 0 ? '+' : null}\r\n              {changesRatio(selectedBithumbCoinInfo).toFixed(2)}%\r\n            </styled.CoinChangeRate>\r\n            <styled.CoinChangePrice>\r\n              {changes(selectedBithumbCoinInfo) > 0 ? '▲' : '▼'}\r\n              {Math.abs(changes(selectedBithumbCoinInfo))?.toLocaleString(\r\n                'ko-KR',\r\n              )}\r\n            </styled.CoinChangePrice>\r\n          </styled.CoinChangeWrapper>\r\n        </styled.CoinInfoContainer>\r\n      )}\r\n\r\n      <styled.ChartRefDiv ref={chartContainerRef}></styled.ChartRefDiv>\r\n    </styled.ChartContainer>\r\n  );\r\n}\r\n","const options = { method: 'GET', headers: { accept: 'application/json' } };\r\n\r\nexport const fetchBithumbCandlestick = async (\r\n  order_currency: string,\r\n  chart_intervals: string,\r\n) => {\r\n  const bithumbCandlestick = await (\r\n    await fetch(\r\n      `https://api.bithumb.com/public/candlestick/${order_currency}_KRW/${chart_intervals}`,\r\n      options,\r\n    )\r\n  )\r\n    .json()\r\n    .catch((error) => {\r\n      console.error('bithumb candlestick api 오류 발생', error);\r\n    });\r\n\r\n  return bithumbCandlestick.data;\r\n};\r\n","import { memo, useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport ChartComponent from './ChartComponent';\r\nimport {\r\n  selectedBithumbCoinInfoState,\r\n  selectedBithumbCoinState,\r\n} from 'recoil/atoms/bithumb';\r\nimport { fetchBithumbCandlestick } from 'api/bithumb/fetchBithumbCandlestick';\r\nimport { IBithumbFetchCandlestick } from './Bithumb.type';\r\nimport { CandlestickData } from 'lightweight-charts';\r\n\r\nfunction RealTimeChart() {\r\n  const selectedBithumbCoin = useRecoilValue(selectedBithumbCoinState);\r\n  const selectedBithumbCoinInfo = useRecoilValue(selectedBithumbCoinInfoState);\r\n  const [fetchedData, setFetchedData] = useState<IBithumbFetchCandlestick[]>(\r\n    [],\r\n  );\r\n  const [processedData, setProcessedData] = useState<CandlestickData[]>([]);\r\n  const [updatedCandle, setUpdatedCandle] = useState<CandlestickData | null>(\r\n    null,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (selectedBithumbCoin) {\r\n      fetchBithumbCandlestick(selectedBithumbCoin, '24h').then((res) => {\r\n        setFetchedData(res);\r\n      });\r\n    }\r\n  }, [selectedBithumbCoin]);\r\n\r\n  useEffect(() => {\r\n    if (fetchedData) {\r\n      const processed = fetchedData\r\n        .map((data) => {\r\n          const date = new Date(data[0]);\r\n          const time = `${date.getFullYear()}-${String(\r\n            date.getMonth() + 1,\r\n          ).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n          return {\r\n            time: time,\r\n            open: Number(data[1]),\r\n            close: Number(data[2]),\r\n            high: Number(data[3]),\r\n            low: Number(data[4]),\r\n          };\r\n        })\r\n        .reduce((acc: CandlestickData[], current) => {\r\n          if (\r\n            acc.findIndex(({ time }) => {\r\n              return time === current.time;\r\n            }) === -1\r\n          ) {\r\n            acc.push(current);\r\n          }\r\n          return acc;\r\n        }, []);\r\n      setProcessedData(processed);\r\n    }\r\n  }, [fetchedData]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBithumbCoinInfo) {\r\n      if (selectedBithumbCoinInfo.date) {\r\n        setUpdatedCandle({\r\n          time: `${selectedBithumbCoinInfo.date.slice(\r\n            0,\r\n            4,\r\n          )}-${selectedBithumbCoinInfo.date.slice(\r\n            4,\r\n            6,\r\n          )}-${selectedBithumbCoinInfo.date.slice(6, 8)}`,\r\n          open: Number(selectedBithumbCoinInfo.opening_price),\r\n          high: Number(selectedBithumbCoinInfo.max_price),\r\n          low: Number(selectedBithumbCoinInfo.min_price),\r\n          close: Number(selectedBithumbCoinInfo.closing_price),\r\n        });\r\n      }\r\n    }\r\n  }, [selectedBithumbCoinInfo]);\r\n\r\n  return (\r\n    <>\r\n      {updatedCandle && (\r\n        <ChartComponent\r\n          processedData={processedData}\r\n          updatedCandle={updatedCandle}\r\n        ></ChartComponent>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(RealTimeChart);\r\n","import { Home } from './Home.page';\r\n\r\nexport default Home;\r\n","import * as styled from './Home.styles';\r\nimport { Table } from 'components/Table';\r\nimport { ChartRight } from 'components/ChartRight';\r\nimport { ChartLeft } from 'components/ChartLeft';\r\nimport { ChatBox } from 'components/ChatBox';\r\nimport { Widget } from 'components/Widget';\r\nimport { modalIsOpenState } from 'recoil/atoms/upbit';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { Header } from 'components/common/Header';\r\nimport RealTimeChart from 'components/bithumb/RealTimeChart';\r\nimport { baseExchangeState } from 'recoil/atoms/common';\r\n\r\nexport const Home: React.FC = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useRecoilState(modalIsOpenState);\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const baseExchange = useRecoilValue(baseExchangeState);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <styled.DisplayBoard>\r\n        <Widget />\r\n        <styled.ChartsWrapper>\r\n          <ChartLeft />\r\n          {baseExchange === 'upbit' ? <ChartRight /> : <RealTimeChart />}\r\n        </styled.ChartsWrapper>\r\n        <Table />\r\n        <ChatBox />\r\n      </styled.DisplayBoard>\r\n      <styled.ChatButton onClick={openModal} $isOpen={modalIsOpen}>\r\n        <styled.Icon />\r\n      </styled.ChatButton>\r\n    </>\r\n  );\r\n};\r\n"],"names":["_g","_g2","_path","_g3","_g4","_defs","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChatBtn","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","preserveAspectRatio","xmlns","ref","id","opacity","filter","d","fillRule","clipRule","fillOpacity","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","operator","type","values","dy","k2","k3","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","ForwardRef","DisplayBoard","styled","main","_templateObject","_taggedTemplateLiteral","ChartsWrapper","div","_templateObject2","ChatButton","button","_templateObject3","theme","colors","bg_element2","_ref2","border1","_ref3","alpha1","_ref4","$isOpen","_ref5","bg_element1","Icon","ChatBtn","_templateObject4","TableContainer","TableNav","TableBox","bg_element4","SelectWrapper","CoinListWrapper","_templateObject5","CoinBox","_templateObject6","$selected","CoinBoxName","_templateObject7","CoinBoxNameKorean","_templateObject8","CoinBoxNameMarket","_templateObject9","CoinBoxPrice","_templateObject10","CoinBoxPriceKorean","_templateObject11","CoinBoxPriceBinance","_templateObject12","CoinBoxKimchiPremium","_templateObject13","$isPositive","CoinBoxKimchiPremiumRate","_templateObject14","CoinBoxKimchiPremiumDiff","_templateObject15","CoinBoxChange","_templateObject16","$changeType","CoinBoxChangeRate","_templateObject17","CoinBoxChangePrice","_templateObject18","CoinBoxHighestWeek","_templateObject19","CoinBoxHighestWeekRate","_templateObject20","CoinBoxHighestWeekPrice","_templateObject21","CoinBoxLowestWeek","_templateObject22","CoinBoxLowestWeekRate","_templateObject23","CoinBoxLowestWeekPrice","_templateObject24","CoinBoxVolume","_templateObject25","baseExchangeState","atom","default","selectedCoinState","market","korean_name","english_name","selectedCoinInfoState","searchCoinState","convertMillonWon","value","tableSortValueState","tableSortUpDownState","upbitMarketCodesState","modalIsOpenState","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","marketCodes","setMarketCodes","fetchMarketCodes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cachedData","response","json","wrap","_context","prev","next","sessionStorage","getItem","JSON","parse","abrupt","fetch","sent","ok","Error","text","code","includes","setItem","stringify","t0","console","error","finish","stop","useEffect","exchangeRateState","binancePriceToKRW","binancePrice","myExchangeRate","parseFloat","kimchiPremiumRatio","nowPrice","kimchiPremiumDiff","highest_52_week_rate","data","trade_price","highest_52_week_price","lowest_52_week_rate","lowest_52_week_price","changesRatio","closing_price","prev_closing_price","Number","changes","highRatio","max_price","lowRatio","min_price","binanceTickers","setBinanceTickers","ws","WebSocket","onmessage","e","filteredData","ticker","s","endsWith","log","onerror","err","readyState","OPEN","close","socket","useRef","list","setList","useBinanceTicker","wsRequest","useMemo","ticket","codes","request","format","undefined","createWebSocketRequest","map","socketMessageHandler","useCallback","throttle","evt","Blob","reader","FileReader","onload","blobData","parsedData","prevList","existingIndex","findIndex","item","index","_objectSpread","concat","_toConsumableArray","readAsText","leading","socketOpenHandler","_socket$current","current","send","onopen","newList","binanceTicker","find","_item$code","replace","split","c","updateUpbitListWithBinance","socketDatas","UpbitTable","useFetchUpbitMarketCode","_useRecoilState","useRecoilState","_useRecoilState2","upbitMarketCodes","setUpbitMarketCodes","useUpbitTicker","_useRecoilState3","_useRecoilState4","selectedCoin","setSelectedCoin","_useRecoilState5","_useRecoilState6","setSelectedCoinInfo","targetData","clickCoinHandler","currentTarget","useRecoilValue","searchCoin","filteredSocketDatas","setFilteredSocketDatas","some","marketCode","tableSortValue","tableSortUpDown","sort","a","b","signed_change_rate","acc_trade_price_24h","_jsx","children","_selectedCoin$","_data$code","_data$code2","_marketCodes$filter$","_marketCodes$filter$2","_marketCodes$filter$3","_data$trade_price","_data$signed_change_p","_data$highest_52_week","_data$lowest_52_week_","_Math$ceil","_jsxs","onClick","alt","decoding","className","src","loading","toLocaleString","_Fragment","toFixed","change","signed_change_price","Math","ceil","memo","options","method","headers","accept","fetchBithumbTicker","bithumbTicker","catch","bithumbMarketCodesState","selectedBithumbCoinState","selectedBithumbCoinInfoState","useBithumbWsTicker","fetchData","useSetRecoilState","setFetchData","then","res","fetchArr","entries","splice","tickerData","push","symbol","useFetchBithumbTicker","setSocketDatas","symbols","tickTypes","_data$content","tickType","closePrice","lowPrice","highPrice","prevClosePrice","date","time","content","prevState","acc_trade_value_24H","_x","socketData","updateBithumbSocketDataWithBinance","num","coingeckoCoinDataState","useMatchCoingecko","bithumbCoinSymbol","coingeckoCoinData","thumb","setThumb","coinName","setCoinName","coin","name","large","BithumbTable","selectedBithumbCoin","setSelectedBithumbCoin","setSelectedBithumbCoinInfo","_useMatchCoingecko","judgeColor","getCoingeckoData","CoingeckoCoinData","Bithumb","setCoingeckoData","coins","gecko","toLowerCase","TableHeaderContainer","TableHeaderItemContainer","$value","heading2","text1","SortIconWrapper","span","SortUpIcon","FaSortUp","SortDownIcon","FaSortDown","_ref6","_ref7","TableHeaderItem","setTableSortValue","setTableSortUpDown","isSameValue","TableHeader","baseExchange","exchangeRate","setExchangeRate","eventSource","EventSource","process","event","rate","SelectBox","bg_element6","alpha2","$disabled","Label","label","SelectOptions","ul","$show","_ref8","Option","li","_ref9","_ref10","DropdownIcon","FiChevronDown","_ref11","icon","Check","CgCheck","$isChecked","primary2","Symbol","img","CustomSelect","_optionData$find","optionData","onChange","disabled","currentValue","setCurrentValue","currentTitle","setCurrentTitle","_useDropdown","isOpen","setIsOpen","handleClickOutside","contains","document","addEventListener","removeEventListener","useDropdown","handleOnChangeSelectValue","stopPropagation","targetTitle","getAttribute","selectedData","opt","SELECT_OPTION","SELECT_SINGLE_OPTION","Table","setBaseExchange","bithumbMarketCodes","setSearchCoin","useFetchExchangeRate","mySetExchangeRate","placeholder","todayDate","Date","getFullYear","getMonth","toString","padStart","getDate","selectedCoinInfo","fetchedData","setFetchedData","processedData","setProcessedData","_useState5","_useState6","updatedCandle","setUpdatedCandle","Accept","_fetchDayCandle","count","_x2","_x3","fetchDayCandle","getTodayDate","processed","reverse","candle_date_time_kst","slice","open","opening_price","high","high_price","low","low_price","_selectedCoinInfo$","_selectedCoinInfo$$tr","_selectedCoinInfo$2","_selectedCoinInfo$2$t","_selectedCoinInfo$3","_selectedCoinInfo$3$t","_selectedCoinInfo$4","_selectedCoinInfo$5","_selectedCoinInfo$6","_selectedCoinInfo$7","day","trade_date","month","year","ChartContainer","CoinInfoContainer","CoinImgWrapper","CoinInfo","CoinIdentity","CoinName","heading1","CoinSymbol","CoinPrice","red","blue","CoinChangeWrapper","CoinChangeRate","text2","CoinChangePrice","ChartRefDiv","ChartRight","_Math$abs","_useCreateChart","useCreateChart","useTheme","textColor","chartContainerRef","chart","newSeries","handleResize","_chartContainerRef$cu","applyOptions","clientWidth","createChart","layout","background","color","autoSize","grid","vertLines","border2","horzLines","crosshair","CrosshairMode","Normal","leftPriceScale","borderVisible","rightPriceScale","scaleMargins","top","bottom","timeScale","fixLeftEdge","fixRightEdge","barSpacing","addCandlestickSeries","upColor","wickUpColor","downColor","wickDownColor","window","setData","remove","update","selectedRate","selectedChangePrice","isPositiveRate","FaCaretUp","FaCaretDown","abs","tvScriptLoadingPromise","TRADING_VIEW_SYMBOLS","BINANCE","UPBIT","BITHUMB","TRADING_VIEW_TICKERS","symbol1","symbol2","selectState","ChartInfo","ChartInfoWrapper","SymbolWrapper","SymbolGroup","SymbolOutline","SymbolOutline1","SymbolOutline2","ChartName","ChartTicker","WidgetContainer","Chart","TradingViewWidget","currentTheme","themeState","selectedOption","onLoadScriptRef","getElementById","TradingView","widget","autosize","getTradingViewSymbol","interval","timezone","style","locale","enable_publishing","hide_top_toolbar","hide_legend","save_image","hide_volume","backgroundColor","container_id","Promise","resolve","script","createElement","head","appendChild","exchange","tickerInfo","getTradingViewTicker","ChartLeft","setSelectState","val","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","fetchMessages","setMessages","lastMessage","q","baseQuery","query","collection","orderBy","limit","startAfter","createdAt","messageQuery","onSnapshot","QuerySnapshot","sortedMessages","fetchedMessages","forEach","doc","message","warn","toMillis","orderSnapshotMessages","MessageRight","MessageLeft","UserInfo","UserName","UserId","UserMessage","bg_element3","ChatBubble","$isCurrentUser","Wrapper","Time","TimeRight","TimeLeft","storedUid","localStorage","toDate","firstThreeChars","uid","substring","formattedTime","toLocaleTimeString","hour","minute","isCurrentUser","createMessages","_getUserInfoFromLocal","displayName","trim","alert","addDoc","serverTimestamp","getNickname","_getNickname","nickname","axios","get","SendMessageForm","form","SendMessageWrapper","SendMessageInput","input","text3","SendMessageButton","bg_element5","primary1","alpha_primary1","_saveUserInfoToLocalStorage","_callee2","_context2","shortId","char","toUpperCase","setMessage","handleSendMessage","preventDefault","storedDisplayName","saveUserInfoToLocalStorage","onSubmit","RiSendPlaneFill","StyledModal","Modal","ChatBoxHeader","HeaderWrapper","Title","CloseButton","InfoWrapper","Nickname","ButtonWrapper","Button","_ref12","_ref13","MessagesWrapper","ScrollToBottomButton","_ref14","_ref15","$isVisible","_ref16","BottomIcon","_ref17","updateNickname","userChosenNickname","prompt","ChatBox","modalIsOpen","setModalIsOpen","messages","messagesEndRef","messagesWrapperRef","isAtBottom","setIsAtBottom","setLastMessage","scrollToBottom","scrollIntoView","unsubscribe","overlay","zIndex","pointerEvents","onScroll","scrollHeight","scrollTop","clientHeight","oldScrollHeight","requestAnimationFrame","_messagesWrapperRef$c","newLastMessage","newMessages","AiFillMessage","Message","SendMessage","_getTickerWidgetData","pairId","dataIndex","_args","setRefetchInterval","useWidgetTickers","useQuery","getTickerWidgetData","refetchInterval","PAIR_DATA","intervals","NASDAQ","KOSPI","KOSDAQ","_getChartWidgetData","currentDate","prev9AM","prev9AMTimestamp","getTime","getChartWidgetData","ChartWidget","baseData","_useChartTickers","useChartTickers","baselineValue","ColorType","Solid","visible","handleScroll","mouseWheel","pressedMouseMove","handleScale","pinch","axisPressedMouseMove","price","vertLine","horzLine","addBaselineSeries","baseValue","lineWidth","topLineColor","topFillColor1","topFillColor2","bottomLineColor","bottomFillColor1","bottomFillColor2","crosshairMarkerVisible","priceLineVisible","convertedData","lineSeries","addLineSeries","lineStyle","lineData","fitContent","diff","percent","Intl","NumberFormat","Container","sizes","lg","$visible","PrevButton","NextButton","white","SliderContainer","Shade","LeftShade","bg_page","RightShade","Card","TickerRow","ChartRow","Ticker","Price","Nowprice","$highlight","alpha_red","alpha_blue","DiffPrice","$isIncrease","$isDecrease","Perc","Change","TickerWidget","_Object$values$find","currentInterval","p","_useWidgetTickers","currentData","prevData","highlight","setHighlight","changeRateCurrent","timer","setTimeout","clearTimeout","getChangeRate","changeRatePrev","_getFormattedValues","getFormattedValues","formatNumber","Carousel","slidesToShow","currentIndex","setCurrentIndex","maxIndex","React","max","FiChevronLeft","transform","min","FiChevronRight","Widget","HeaderContainer","header","Inner","InnerSpaceBetween","Topbar","Rate","alpha3","Logo","BtnGroup","GithubButton","SwitchButton","$isDarkMode","getGlobalCoinData","_getGlobalCoinData","globalCoinState","setTheme","onChangeTheme","updatedTheme","useLayoutEffect","savedTheme","matchMedia","matches","_globalCoin$","_globalCoin$2","_globalCoin$3","_globalCoin$4","_globalCoin$5","_globalCoin$6","_globalCoin$7","_globalCoin$8","_globalCoin$9","_useTheme","globalCoin","setGlobalCoin","isDarkMode","multiplyByExchangeRate","formatCurrency","trillion","floor","billion","coins_count","active_markets","total_mcap","mcap_change","total_volume","volume_change","btc_d","href","LogoDark","LogoLight","rel","DiGithubAlt","HiMoon","HiSun","ChartComponent","_newSeries$current","_chart$current","selectedBithumbCoinInfo","fontSize","fetchBithumbCandlestick","order_currency","chart_intervals","bithumbCandlestick","RealTimeChart","String","reduce","acc","Header"],"sourceRoot":""}